        implicit real *8 (a-h,o-z)
        real *8 ts(10 000),
     3      diffs(10 000),tstest(10 000),bells(10 000),ders(10 000),
     4      fourt(2500),
     5      bells2(2500),ders2(2500),coesbell(2000),bells11(10 000),
     6      ders11(10 000)
c 
        complex *16 ctaper(2500),wsave(50 000)
c 
        call prini(6,13)
C 
C       SET ALL PARAMETERS
C 
        PRINT *, 'ENTER ndigits'
        READ *,ndigits
        CALL PRINf('ndigits=*',ndigits,1 )
  
  
        ntest=2048
c 
c       calculate the scaled bell on the interval [-1,1]
c 
        h=2
        h=h/ntest
        do 2200 i=1,ntest
c 
        tstest(i)=(i-1)*h-1
 2200 continue
c 
c       construct the bell and plot it
c 
        do 2400 i=1,ntest
c 
        call probelev(ndigits,tstest(i),bells2(i),der)
  
 2400 continue
  
  
        iw=21
        call lotaplot(iw,tstest,bells2,ntest,
     1      'the bell is  *')
c 
c       test the tapering subroutine
c 
cccc        wing=0.7
  
        wing=0.5
c 
c       calculate the taper for a bunch of points on the interval
c       [-1,1] and plot them things
c 
        do 4200 i=1,ntest
c 
        ders(i)=0
  
cccc        call protaper2(ndigits,wing,tstest(i),bells(i),ders(i))
        call protaper2(ndigits,wing,tstest(i),bells(i),ders(i))
 4200 continue
c 
c       construct the translated version of the bell, in agreement
c       with the standard FFT convention
c 
        n=ntest
  
        iw=24
        call lotaplot(iw,tstest,bells,ntest,
     1      'and the whole taper *')
  
c 
c       fourier transform the taper and look at the result
c 
        do 4400 i=1,ntest
c 
        ctaper(i)=bells(i)/ntest
  
 4400 continue
  
  
        call DCFFTI(Ntest,WSAVE)
  
        call DCFFTF(Ntest,Ctaper,WSAVE)
  
cccc        call prin2('and ctaper after fft*',ctaper,ntest*2)
  
        sum=0
        do 2600 i=1,ntest
        fourt(i)=ctaper(i)
        ts(i)=i
        sum=sum+ctaper(i)
 2600 continue
c 
        iw=25
        call lotagraph(iw,ts,fourt,ntest,
     1      'and fourier transform of taper *')
  
        call prin2('and sum-1=*',sum-1,1)
  
  
        htest=tstest(2)-tstest(1)
        do 2800 i=2,ntest-1
c 
        ders2(i)=(bells(i+1)-bells(i-1))/htest/2
  
        diffs(i)=ders2(i)-ders(i)
 2800 continue
  
        call prin2('and ders2=*',ders2,30)
        call prin2('while ders=*',ders,30)
        call prin2('and diffs=*',diffs,30)
        call prin2('and bells=*',bells,ntest)
c 
c       retrieve from the subroutine the coefficients of the
c       Legendre series of the integral of the appropriate
c       prolate function
c 
        call prolbret(ier,ndigits,coesbell,nterms)
  
        call prin2('after prolbret, coesbell=*',coesbell,nterms+1)
        call prinf('after prolbret, nterms=*',nterms,1)
        call prinf('after prolbret, ndigits=*',ndigits,1)
c 
c        evaluate the bell at the points tstest
c 
        do 3200 i=1,ntest
c 
        call proserev(tstest(i),VAL,der,coesbell,Nterms)
  
        bells11(i)=val
        ders11(i)=der
 3200 continue
  
  
        iw=26
        call lotagraph(iw,tstest,bells11,ntest,
     1      'and the raw bell from prolbret*')
  
  
        iw=27
        call lotagraph(iw,tstest,ders11,ntest,
     1      'and the derivative of the raw bell from prolbret*')
c 
        stop
        end
c 
c 
c 
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c 
c        This is the end of the testing code and the beginning of the
c        prolate bell/taper code proper
c 
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c 
c 
c        This file contains the following user-callable subroutines:
c 
c 
c   protaper2 - evaluates at the user-supplied point x \in [-1,1]
c        the taper function, together with its derivative; the geometry
c        of the taper is compatible with that assumed by most FFT
c        routines
c 
c   protaper -  evaluates at the user-supplied point x \in [-1,1]
c        the taper function, together with its derivative; the
c        geometry of the taper is the intuitive one, and is NOT
c        compatible with that assumed by most FFT routines
c 
c   probelev - evaluates the prolate bell at the user-supplied
c        point x \in [-1,1]. Please note that the prolate bell is NOT
c        the prolate function
c 
c   prolbret - returns to the user the coefficients of the Legendre
c        series of a prolate bell function.
c 
c   proltrap - constructs the "universal" quadrature rule based on
c        the prolate bell.
c 
c   proresf - constructs the image of the point t \in [-1,1] under
c        the "universal reparametrization" based on the the prolate
c        bell.
c 
c 
        subroutine protaper2(ndigits,wing,x,bell,der)
        implicit real *8 (a-h,o-z)
c 
c       This subroutine evaluates at the user-supplied point
c       x \in [-1,1] the taper function, together with its derivative;
c       the geometry of the taper is compatible with that assumed by
c       most FFT routines, so that the graph of the taper looks as follows:
c 
c 
c      *
c     ***
c      *
c      *
c      *
c   1> *               **********                 **********
c      *                         *               *
c      *                          *             *
c      *                           *           *
c   0> *                            ***********
c      *
c      *
c      *
c      *
c      *                                                                 *
c      ********************************************************************
c                      ^        ^        ^        ^         ^            *
c                     -1      -wing      0       wing       1
c 
c 
c 
c                         Input parameters:
c 
c  ndigits - the number of digits with which the bell is a bell, etc.;
c            must be between 1 and 16 (inclusive); however, since the
c            calculations are conducted in double precision, there is
c            no actual accuracy gain after ndigits = 14 or even ndigits=13
c  wing - the size of the wing (see cartoon above)
c  x - the point on the interval [-1,1] where the taper function and its
c            derivative are to be evaluated
c 
c                         Output parameters:
c  bell - the value of the taper function at the point x \in [-1,1]
c  der - the derivative of the taper function at the point x \in [-1,1]
c 
c 
c       . . . if the user-supplied point is not in either of the wings
c             - set the bell to 1 and get out
c 
        save
        if(abs(x) .lt. wing) goto 1400
c 
        bell=1
        der=0
        return
 1400 continue
c 
c       if the user-supplied point is on the left wing - act accordingly
c 
        if(x .gt. 0) goto 1800
c 
        beta=1
        alpha=beta/wing
c 
        t=alpha*x+beta
c 
        call probelev(ndigits,t,bell,der)
  
        der=der/wing*2
c 
        return
 1800 continue
c 
c       the user-supplied point is on the right wing - act accordingly
c 
        beta=1
        alpha=-beta/wing
  
c 
        t=alpha*x+beta
c 
        call probelev(ndigits,t,bell,der)
  
        der=der/wing*2
        return
        end
c 
c 
c 
c 
c 
        subroutine protaper(ndigits,wing,x,bell,der)
        implicit real *8 (a-h,o-z)
c 
c       This subroutine evaluates at the user-supplied point
c       x \in [-1,1] the taper function, together with its derivative;
c       the geometry of the taper is the intuitive one, and is NOT
c       compatible with that assumed by most FFT routines, so that
c       the graph of the taper looks as follows:
c 
c 
c      *
c     ***
c      *
c   1> *                       *******************
c      *                      *                   *
c      *                     *                     *
c      *                    *                       *
c   0> *              ******                         ******
c      *
c      *
c      *
c      *
c      *                                                                *
c      ********************************************************************
c                     ^        ^        ^        ^        ^             *
c                    -1     -1+wing     0      1-wing     1
c 
c 
c 
c                         Input parameters:
c 
c  ndigits - the number of digits with which the bell is a bell, etc.;
c            must be between 1 and 16 (inclusive); however, since the
c            calculations are conducted in double precision, there is
c            no actual accuracy gain after ndigits = 14 or even ndigits=13
c  wing - the size of the wing (see cartoon above)
c  x - the point on the interval [-1,1] where the taper function and its
c            derivative are to be evaluated
c 
c                         Output parameters:
c  bell - the value of the taper function at the point x \in [-1,1]
c  der - the derivative of the taper function at the point x \in [-1,1]
c 
c 
c       . . . if the user-supplied point is not in either of the wings
c             - set the bell to 1 and get out
c 
        save
        if(abs(x-1) .lt. wing) goto 1400
        if(abs(x+1) .lt. wing) goto 1400
c 
        bell=1
        der=0
        return
 1400 continue
c 
c       if the user-supplied point is on the left wing - act accordingly
c 
        if(x .gt. 0) goto 1800
c 
        b=1-wing
        alpha=1/(b-1)
        beta=1+alpha
c 
        t=alpha*x+beta
c 
        call probelev(ndigits,t,bell,der)
        der=der/wing*2
c 
        return
 1800 continue
c 
c       the user-supplied point is on the right wing - act accordingly
c 
        b=1-wing
        alpha=1/(1-b)
        beta=1-alpha
c 
        t=alpha*x+beta
c 
        call probelev(ndigits,t,bell,der)
        der=der/wing*2
        return
        end
c 
c 
c 
c 
c 
        subroutine probelev(ndigits,x,bell,der)
        implicit real *8 (a-h,o-z)
        save
        dimension coesbell(1000)
c 
        data ndigold/-1/
c 
c        This subroutine evaluates the prolate bell at the user-supplied
c        point x \in [-1,1]. Please note that the prolate bell is NOT
c        the prolate function, and has the folloeing appearance:
c 
c 
c      *
c     ***
c      *
c   1> *                           ***********
c      *                          *           *
c      *                         *             *
c      *                        *               *
c      *                       *                 *
c      *                      *                   *
c      *                     *                     *
c      *                    *                       *
c   0> *              ******                         ******
c      *
c      *
c      *
c      *
c      *                                                                *
c      ********************************************************************
c                     ^                 ^                 ^             *
c                    -1                 0                 1
c 
c 
c        with all derivatives equal to zero at the points -1, 0, 1.
c 
c 
c                         Input parameters:
c 
c  ndigits - the number of digits with which the bell is a bell, etc.;
c            must be between 1 and 16 (inclusive); however, since the
c            calculations are conducted in double precision, there is
c            no actual accuracy gain after ndigits = 14 or even ndigits=13
c  x - the point on the interval [-1,1] where the taper function and its
c            derivative are to be evaluated
c 
c                         Output parameters:
c  bell - the value of the bell function at the point x \in [-1,1]
c  der - the derivative of the bell function at the point x \in [-1,1]
c 
c 
c       . . . if the user-requested number of digits is different from
c             the one requested during the preceding call - retrieve
c             the appropriate coefficients from the subroutine prolbret
c 
        if(ndigold .eq. ndigits) goto 1100
c 
        call prolbret(ier,ndigits,coesbell,nterms)
        ndigold=ndigits
 1100 continue
c 
c               if the point is outside the interval [-1,1]
c             - set both the bell and its derivative to zero
c 
        if(abs(x) .lt. 1) goto 1200
        bell=0
        der=0
        return
 1200 continue
c 
c       calculate the bell and its derivative if x < 0
c 
        if(x .gt. 0) goto 2200
c 
        t=x*2+1
c 
        call proserev(t,bell,der,coesbell,Nterms)
c 
        return
 2200 continue
c 
c       calculate the bell and its derivative if x < 0
c 
        if(x .le. 0) goto 2400
c 
        t=-x*2+1
c 
        call proserev(t,bell,der,coesbell,Nterms)
c 
        return
 2400 continue
c 
        return
        end
  
  
  
  
c 
c 
c 
c 
c 
        subroutine prolbret(ier,ndigits,coesbell,nterms)
        implicit real *8 (a-h,o-z)
        save
        dimension coesbell(1)
c 
        dimension bell6(21),bell7(22),bell8(24),bell9(25),
     1      bell10(26),bell11(34),bell12(35),bell13(37),
     2      bell14(38),bell15(39),bell16(40),bell17(41),
     3      bell1(12),bell2(15),bell3(17),bell4(18),bell5(20),
     4      bell18(42),bell19(43),bell20(43),bell30(55),
     5      bell24(50),bell28(53)
c 
c       This subroutine returns to the user the coefficients of the
c       Legendre series of a prolate bell function. The left wing
c       of the bell (i .e. for the values of x in the interval [-1,0])
c       is given by the expression
c 
c        b(x) = \int_{-1}^t \psi_0(\tau) d \tau,                       (1)
c 
c       with t=2*x+1; the right wing of the bell is given by the
c       same formula (1), with t=-2*x+1.
c 
c                        Input parameters:
c 
c  ndigits - the number of digits with which the bell to be constructed
c       is indeed a bell. Permitted values: 1-16; please note that the
c       subroutine treats this parameter conservatively, in that the
c       actuall precision tends to be higher than the one requested.
c 
c                        Output parameters:
c 
c  ier - errorr eturn code. Will be equal to zero for any integer
c       ndigits between 1 and 16 (inclusive). Will be equal to 16
c       for any other vlue of ndigits; please note that this is a
c       fatal error.
c  coesbell - the coefficients of the Legendre expansion of the prolate
c       bell. Following is a cartoon of the bell whose Legendre expansion
c       the array coesbell contains.
c 
c 
c 
c          *
c         ***
c          *
c          *
c          *
c          *
c          *
c          *
c          *
c          *
c          *
c          *
c      1   *                                   ************
c          *                                  *
c          *                                 *
c          *                                *
c          *                               *
c          *                              *
c          *                             *
c          *                            *
c          *                           *
c          *                          *
c          *                         *
c          *                        *
c          *                       *
c          *                      *
c          *                     *
c          *                    *
c      0   *        ************
c          *
c          *                                                      *
c          *********************************************************
c                                                                 *
c                   0                                      1
c 
c  nterms - the order (which is one less than the number of terms) of
c          the Legendre expsnsion returned in array coesbell
c 
c        In this cycle, eps=.100000D+00, nterms= 23
c        c= 0.400592968933142D+01
c 
         data bell1/
     1   0.60146380521739678D+00,-.11407161876618731D+00,
     2   0.13517050808556468D-01,-.95099637906870625D-03,
     3   0.43076235352447691D-04,-.13472944152457946D-05,
     4   0.30702429187461044D-07,-.53119133224436952D-09,
     5   0.72056414387414163D-11,-.78630974259126637D-13,
     6   0.70484836699800012D-15,-.52474422774879081D-17/
c 
c        In this cycle, eps=.100000D-01, nterms= 29,
c        c= 0.683119074050400D+01
c 
         data bell2/
     1   0.65282374627936021D+00,-.19141750864209432D+00,
     2   0.45122452021114502D-01,-.72865198821214535D-02,
     3   0.82086450595348221D-03,-.66943839670080946D-04,
     4   0.40964992557243430D-05,-.19402525396135610D-06,
     5   0.73010291375707074D-08,-.22309417793706759D-09,
     6   0.56385323117075611D-11,-.11972968057404566D-12,
     7   0.21647271671191502D-14,-.33712088197411763D-16,
     8   0.45141417098889022D-18/
c 
c        In this cycle, eps=.100000D-02, nterms= 33,
c        c= 0.947202580651210D+01
c 
         data bell3/
     1   0.67728240463901267D+00,-.23813171072185113D+00,
     2   0.76413180567054787D-01,-.18490113683364890D-01,
     3   0.33386092789302805D-02,-.45703189856104223D-03,
     4   0.48470073868898336D-04,-.40694706145776921D-05,
     5   0.27590122830683477D-06,-.15373497945007464D-07,
     6   0.71500879640970183D-09,-.28135054970914944D-10,
     7   0.94783706114451960D-12,-.27624886843876591D-13,
     8   0.70299448190778179D-15,-.15748628500911991D-16,
     9   0.30739584628451690D-18/
c 
c        In this cycle, eps=.100000D-03,nterms= 35,
c        c= 0.120226677411590D+02
c 
         data bell4/
     1   0.69160039102561541D+00,-.26956152938432798D+00,
     2   0.10339789628119517D+00,-.31880180988271425D-01,
     3   0.77165963648888549D-02,-.14722336781315063D-02,
     4   0.22409631057354861D-03,-.27610049913059973D-04,
     5   0.27937293542265681D-05,-.23536839784397071D-06,
     6   0.16719790988592986D-07,-.10129458216838715D-08,
     7   0.52877576297400086D-10,-.24004335615733336D-11,
     8   0.95551421249843187D-13,-.33600919195352383D-14,
     9   0.10508799304097005D-15,-.28685440219481282D-17/
c 
c        In this cycle, eps=.100000D-04, nterms= 39,
c        c= 0.145195500384292D+02
c 
         data bell5/
     1   0.70106421386446655D+00,-.29222790526085048D+00,
     2   0.12606530030258014D+00,-.45721761909315494D-01,
     3   0.13525407164381889D-01,-.32545522934381341D-02,
     4   0.64085583402647623D-03,-.10423306262155803D-03,
     5   0.14149797470105478D-04,-.16201274920117543D-05,
     6   0.15804337182945451D-06,-.13259577328740125D-07,
     7   0.96515742521948897D-09,-.61441160392107142D-10,
     8   0.34458343893981842D-11,-.17139928975007367D-12,
     9   0.76077856393777156D-14,-.30301942325283824D-15,
     *   0.10886045803195425D-16,-.34418073748126712D-18/
c 
c        In this cycle, eps=.100000D-05, nterms= 41,
c        c= 0.339623643706311D+02
c 
         data bell6/
     1   0.70781525509854548D+00,-.30938574978834029D+00,
     2   0.14510626605369960D+00,-.59148369608864034D-01,
     3   0.20253070337337257D-01,-.57860739292519763D-02,
     4   0.13820553515429167D-02,-.27759730353974528D-03,
     5   0.47232599840761851D-04,-.68618709240993842D-05,
     6   0.85797091383960354D-06,-.93042640854041027D-07,
     7   0.88156222194551613D-08,-.73480322384888451D-09,
     8   0.54227218191984347D-10,-.35642765554735733D-11,
     9   0.20980738472474320D-12,-.11116633714923516D-13,
     *   0.53268535296938006D-15,-.23184759578853445D-16,
     1   0.88792263511040825D-18/
c 
c        In this cycle, eps=.100000D-06, nterms= 43,
c        c= 0.194184111364534D+02
c 
         data bell7/
     1   0.71288918720492832D+00,-.32284814794006126D+00,
     2   0.16122281344246461D+00,-.71781780641734329D-01,
     3   0.27478699876994545D-01,-.89601424754312892D-02,
     4   0.24873539254537715D-02,-.58976533815988292D-03,
     5   0.12004427534253237D-03,-.21100541153305824D-04,
     6   0.32228851493449990D-05,-.43044067318777414D-06,
     7   0.50576695762774310D-07,-.52589440086320866D-08,
     8   0.48659622445645201D-09,-.40274662699573576D-10,
     9   0.29965220223385728D-11,-.20133386485280561D-12,
     *   0.12268448731417556D-13,-.68072476766827661D-15,
     1   0.34520921163033922D-16,-.15394944807872777D-17/
c 
c        In this cycle, eps=.100000D-07, nterms= 47,
c        c= 0.218381888425424D+02
c 
         data bell8/
     1   0.71685031990470713D+00,-.33370690910553134D+00,
     2   0.17499558466632966D+00,-.83491606722962008D-01,
     3   0.34899017915043219D-01,-.12639999135799853D-01,
     4   0.39576220637527893D-02,-.10727983124730570D-02,
     5   0.25262042780578100D-03,-.51902174277792886D-04,
     6   0.93493472772540754D-05,-.14840562131095893D-05,
     7   0.20863679311654354D-06,-.26106931245449034D-07,
     8   0.29216177628327297D-08,-.29375184030075404D-09,
     9   0.26651081599077831D-10,-.21908425186663199D-11,
     *   0.16381473104725301D-12,-.11182139925510939D-13,
     1   0.69922570303905333D-15,-.40181975911906923D-16,
     2   0.21285486368090922D-17,-.99695442497785624D-19/
c 
c        In this cycle, eps=.100000D-08, nterms= 49,
c        c= 0.242452552850318D+02
c 
         data bell9/
     1   0.72003343767234023D+00,-.34265971536139751D+00,
     2   0.18688008071724855D+00,-.94267770930574685D-01,
     3   0.42309529664897900D-01,-.16691420583463494D-01,
     4   0.57672876111191780D-02,-.17456479380086028D-02,
     5   0.46384356380344607D-03,-.10854243962020546D-03,
     6   0.22453146580589192D-04,-.41225880062866465D-05,
     7   0.67467421229515356D-06,-.98824906951249980D-07,
     8   0.13009815218519715D-07,-.15453945035179439D-08,
     9   0.16627862608328004D-09,-.16265027507891156D-10,
     *   0.14514797039221807D-11,-.11856181691385371D-12,
     1   0.88924411081945860D-14,-.61422989467764935D-15,
     2   0.39182869009462291D-16,-.23145779514829928D-17,
     3   0.12074398870557028D-18/
c 
c        In this cycle, eps=.100000D-09, nterms= 51,
c        c= 0.266429920398627D+02
c 
         data bell10/
     1   0.72265024218030161D+00,-.35017379777718885D+00,
     2   0.19722926395934373D+00,-.10415556117192125D+00,
     3   0.49578575336458822D-01,-.20996892345871915D-01,
     4   0.78761430947733715D-02,-.26148099232848047D-02,
     5   0.76920773101401832D-03,-.20095844856769457D-03,
     6   0.46761202481232916D-04,-.97229256089443292D-05,
     7   0.18127477478007131D-05,-.30411392656855757D-06,
     8   0.46070369377057073D-07,-.63240792649081321D-08,
     9   0.78927384619368381D-09,-.89852184786600232D-10,
     *   0.93596837596536784D-11,-.89480561109064473D-12,
     1   0.78736443128404064D-13,-.63942333012066392D-14,
     2   0.48050222879640828D-15,-.33494203692892882D-16,
     3   0.21708556140489336D-17,-.12409046796771768D-18/
c 
c        In this cycle, eps=.100000D-10, nterms= 53,
c        c= 0.290338967451443D+02
c 
c 
c        In this cycle, eps=.100000D-10, ,nterms= 67,
c        c= 0.290338967451443D+02
c 
         data bell11/
     1   0.724841421198948916815D+00,-.356574170685506444473D+00,
     2   0.206317216744072247777D+00,-.113222964957548010168D+00,
     3   0.566252762905386575480D-01,-.254596551045750154574D-01,
     4   0.102380597367256467468D-01,-.367676200265059137040D-02,
     5   0.117974383994067617903D-02,-.338728981140943993005D-03,
     6   0.872196459609961526980D-04,-.201930871155469440028D-04,
     7   0.421549856460985090791D-05,-.795863213042611211070D-06,
     8   0.136294201876521908311D-06,-.212358460631025666169D-07,
     9   0.301925752782509601796D-08,-.392848029256737290794D-09,
     *   0.469095305800667666211D-10,-.515449384361991779231D-11,
     1   0.522553874515567025562D-12,-.489984050394218539621D-13,
     2   0.425969148797356552991D-14,-.344122831173104915692D-15,
     3   0.258903016799713933418D-16,-.181783681338966149686D-17,
     4   0.119352378086458536717D-18,-.734158837088274592495D-20,
     5   0.423855771518313093235D-21,-.230072899933174830558D-22,
     6   0.117611011431114150923D-23,-.567086094963318660921D-25,
     7   0.258298022456203352487D-26,-.106924717920079991534D-27/
c 
c        In this cycle, eps=.100000D-11, ,nterms= 69,
c        c= 0.314198649407190D+02
c 
         data bell12/
     1   0.726704265577210970096D+00,-.362094128087909983038D+00,
     2   0.214358414023082781115D+00,-.121544441932886766597D+00,
     3   0.634031585034019201673D-01,-.300029878631300412736D-01,
     4   0.128065703183214670370D-01,-.492082917201172309787D-02,
     5   0.170186860570971487514D-02,-.530293310023284948166D-03,
     6   0.149114604015686501525D-03,-.379169356153488143509D-04,
     7   0.873907291700683001426D-05,-.183018673678695560718D-05,
     8   0.349171451673803901169D-06,-.608449175064987843616D-07,
     9   0.970908298190965409562D-08,-.142236744847502203020D-08,
     *   0.191784428271070073060D-09,-.238584477246809599990D-10,
     1   0.274488985219153455418D-11,-.292720386866438364887D-12,
     2   0.289988825126873754088D-13,-.267440856420874783326D-14,
     3   0.230077178183722866517D-15,-.184996459765877639730D-16,
     4   0.139285765776393971451D-17,-.983735870530819192213D-19,
     5   0.652860848911505445199D-20,-.407796212372012898545D-21,
     6   0.240118633113739695710D-22,-.133480943225690148294D-23,
     7   0.701530146402880488315D-25,-.349062889724812502726D-26,
     8   0.157580091992739206590D-27/
c 
c        In this cycle, eps=.100000D-12, ,nterms= 73,
c        c= 0.338023678685776D+02
c 
         data bell13/
     1   0.728308287256921887563D+00,-.366905603044427675202D+00,
     2   0.221522340909511560143D+00,-.129193092210734316741D+00,
     3   0.698886463710975347476D-01,-.345676298547625382320D-01,
     4   0.155380549529527356896D-01,-.633178333957682421426D-02,
     5   0.233781018963590158708D-02,-.782471736220240809893D-03,
     6   0.237694387806140891924D-03,-.656391543779890238082D-04,
     7   0.165092112000523055744D-04,-.378977088500657861277D-05,
     8   0.795745905667440395904D-06,-.153174863953586020199D-06,
     9   0.270918077332021990206D-07,-.441274216853866233987D-08,
     *   0.663391668939318688436D-09,-.922518030742260756757D-10,
     1   0.118919401140382510425D-10,-.142399060536879081832D-11,
     2   0.158713376305539799575D-12,-.164974950213263069103D-13,
     3   0.160227355386183785554D-14,-.145665112758818931651D-15,
     4   0.124174061389952838138D-16,-.994236276196140255244D-18,
     5   0.748910743183584513169D-19,-.531524008024765485636D-20,
     6   0.355968803543207354473D-21,-.225276198950308233147D-22,
     7   0.134904474088508216174D-23,-.765446311625999881939D-25,
     8   0.412028701429647170642D-26,-.210663815527468944798D-27,
     9   0.978849685583781391334D-29/
  
  
c 
c        In this cycle, eps=.100000D-13, ,nterms= 75,
c        c= 0.361825675685409D+02
c 
         data bell14/
     1   0.729704521941803750372D+00,-.371138183211580013841D+00,
     2   0.227944321924684926354D+00,-.136237116412839054163D+00,
     3   0.760731738886587094237D-01,-.391087485182355495762D-01,
     4   0.183933070941768204034D-01,-.789192054464478510365D-02,
     5   0.308631343416584963906D-02,-.110025956666590746709D-02,
     6   0.357851082703319995598D-03,-.106317781261115096937D-03,
     7   0.288986186222763307355D-04,-.719899334218785625186D-05,
     8   0.164664871747568848581D-05,-.346504828964249086177D-06,
     9   0.672139143430197937782D-07,-.120425639274844343426D-07,
     *   0.199688869129224354427D-08,-.307057248779564332825D-09,
     1   0.438688409006039957152D-10,-.583427056426956051398D-11,
     2   0.723622143175493573155D-12,-.838514331313302314805D-13,
     3   0.909362519201281390599D-14,-.924531128437212708044D-15,
     4   0.882610675054097993612D-16,-.792429185883185141976D-17,
     5   0.670118285065472191434D-18,-.534532724269910832913D-19,
     6   0.402751977038034254843D-20,-.287030237772406439685D-21,
     7   0.193735088215303203406D-22,-.124000227758377379288D-23,
     8   0.753516498433055936886D-25,-.435233265498876226197D-26,
     9   0.239218415307564041308D-27,-.119281266850535363121D-28/
  
c 
c        In this cycle, eps=.100000D-14, ,nterms= 77,
c        c= 0.385613967628619D+02
c 
         data bell15/
     1   0.730931316348040774696D+00,-.374891451057072546693D+00,
     2   0.233733519338053214500D+00,-.142738475845959784750D+00,
     3   0.819578489675982583298D-01,-.435930797847813771777D-01,
     4   0.213380956933880811164D-01,-.958259259314498904672D-02,
     5   0.394342294257537598821D-02,-.148682865347258821917D-02,
     6   0.513887899202199873442D-03,-.162970324308639141210D-03,
     7   0.474813549975454992725D-04,-.127274774991463700633D-04,
     8   0.314381214877764466288D-05,-.716796368452325852954D-06,
     9   0.151117300932268134855D-06,-.295106434473512935235D-07,
     *   0.534761354232982557005D-08,-.900795024159926647173D-09,
     1   0.141298060878031552976D-09,-.206746528591397296694D-10,
     2   0.282660136908065693195D-11,-.361685046709886416512D-12,
     3   0.433843239127216385089D-13,-.488594232614017309201D-14,
     4   0.517408628509297858677D-15,-.515970422773055649061D-16,
     5   0.485218176012799620253D-17,-.430888791161958609295D-18,
     6   0.361812641118324175465D-19,-.287638725700254615314D-20,
     7   0.216766104361671989507D-21,-.155035904582815725889D-22,
     8   0.105358207418452124444D-23,-.681052017710868646333D-25,
     9   0.419210050304489456444D-26,-.245963059405082132575D-27,
     *   0.130693986903429774884D-28/
c 
c        In this cycle, eps=.100000D-15, ,nterms= 79,
c        c= 0.409396126634395D+02
c 
         data bell16/
     1   0.732018059939089638687D+00,-.378243230608230726777D+00,
     2   0.238978853665025571418D+00,-.148752646047470326183D+00,
     3   0.875498589286153200313D-01,-.479964578843806253450D-01,
     4   0.243431419729396950741D-01,-.113852634166232529781D-01,
     5   0.490322485221797603399D-02,-.194366491100427169776D-02,
     6   0.709374887615314258911D-03,-.238532784624162426695D-03,
     7   0.739726043600342072023D-04,-.211820304640303736220D-04,
     8   0.560821673566317543442D-05,-.137490562036363238533D-05,
     9   0.312587255713794001617D-06,-.660080837546328591850D-07,
     *   0.129669194873263170327D-07,-.237344471949127409675D-08,
     1   0.405424527324776744373D-09,-.647304457379972577402D-10,
     2   0.967484285645703196516D-11,-.135572820576229127871D-11,
     3   0.178376310288481278553D-12,-.220680773229270963527D-13,
     4   0.257078131845439269577D-14,-.282379164480932742848D-15,
     5   0.292848689642572856289D-16,-.287114984844466978341D-17,
     6   0.266447589732431394499D-18,-.234333994947539116430D-19,
     7   0.195539097892188704094D-20,-.154987746221903000322D-21,
     8   0.116815638315841085733D-22,-.838114067324244699420D-24,
     9   0.572990136265642447980D-25,-.373647063316858278408D-26,
     *   0.232627277647516743045D-27,-.130934568451012649893D-28/
c 
c        In this cycle, eps=.100000D-16, ,nterms= 81,
c        c= 0.433178378056690D+02
c 
         data bell17/
     1   0.732987669295157435050D+00,-.381255250918884486299D+00,
     2   0.243753429697866580785D+00,-.154328906975035904696D+00,
     3   0.928600683125003045578D-01,-.523017872800798853094D-01,
     4   0.273837900594108358531D-01,-.132821942994161935108D-01,
     5   0.595849177841003678588D-02,-.247078231516920395695D-02,
     6   0.947082485830921851403D-03,-.335743245756182028128D-03,
     7   0.110162394209116904901D-03,-.334886819981311534283D-04,
     8   0.944275525146215836447D-05,-.247274459479885180937D-05,
     9   0.602165528393885321982D-06,-.136554648608667922544D-06,
     *   0.288776714421650553447D-07,-.570296512202873637742D-08,
     1   0.105327402348771140332D-08,-.182180025140037244961D-09,
     2   0.295521856082205414905D-10,-.450204928758268734497D-11,
     3   0.644992450603512942281D-12,-.870167489379557985856D-13,
     4   0.110693475677417797140D-13,-.132943002597339075255D-14,
     5   0.150928848369772579593D-15,-.162168586955909756020D-16,
     6   0.165104338357690641775D-17,-.159456514199501125368D-18,
     7   0.146250742903309082012D-19,-.127523834569077960856D-20,
     8   0.105821329647987043902D-21,-.836528408370913184449D-23,
     9   0.630575590060226338871D-24,-.453683098515396199246D-25,
     *   0.311834431866170410522D-26,-.204944382417204098456D-27,
     1   0.121561844791546101612D-28/
c 
c        In this cycle, eps=.100000D-17, ,nterms= 83,
c        c= 0.456965878575312D+02
c 
         data bell18/
     1   0.733858285363808314689D+00,-.383977119974291534867D+00,
     2   0.248117866429234305605D+00,-.159510856907180087491D+00,
     3   0.979014120079703582224D-01,-.564974135941145295212D-01,
     4   0.304395328505555389087D-01,-.152568509824033367078D-01,
     5   0.710121011494294779706D-02,-.306696796678098221635D-02,
     6   0.122897599016471281840D-02,-.457054711102482432250D-03,
     7   0.157850386908891243529D-03,-.506675153454565257347D-04,
     8   0.151300496269710382348D-04,-.420771639111589801017D-05,
     9   0.109106659300386299802D-05,-.264108566888278028398D-06,
     *   0.597563736548674745952D-07,-.126534963604032589152D-07,
     1   0.251084756908389377445D-08,-.467491135222861545447D-09,
     2   0.817761991510377018234D-10,-.134565333773631241888D-10,
     3   0.208563012069568917856D-11,-.304842531233562634251D-12,
     4   0.420701769692170553641D-13,-.548844112213367254200D-14,
     5   0.677646640817665335742D-15,-.792736295147753925366D-16,
     6   0.879638954608318543962D-17,-.926823100232976406970D-18,
     7   0.928238616629846544090D-19,-.884573256520646565354D-20,
     8   0.802874712249968905085D-21,-.694732370299674036812D-22,
     9   0.573649781662135508707D-23,-.452405070024288716325D-24,
     *   0.341066860462705974315D-25,-.246009406330952607224D-26,
     1   0.169911059000842940755D-27,-.105731743625043797136D-28/
c 
c        In this cycle, eps=.100000D-18, nterms= 85,
c        c= 0.480762941825427D+02
         data bell19/
     1   0.734644462088044004056D+00,-.386449174944925174429D+00,
     2   0.252122834768869818289D+00,-.164337007226134770590D+00,
     3   0.102687834443718631813D+00,-.605758423399018013503D-01,
     4   0.334934969203387815110D-01,-.172941165222467232717D-01,
     5   0.832299374922606252388D-02,-.373002919919662331461D-02,
     6   0.155625395641022989703D-02,-.604577272414667355376D-03,
     7   0.218786935673760667145D-03,-.738033035883024696276D-04,
     8   0.232256899796604316065D-04,-.682500202166533641430D-05,
     9   0.187463866995161316680D-05,-.481813206870243439196D-06,
     *   0.116003355719067609952D-06,-.261932882609613290758D-07,
     1   0.555317776234802766571D-08,-.110670853792145456112D-08,
     2   0.207574246829635901337D-09,-.366832941204791187399D-10,
     3   0.611532526581301323943D-11,-.962770576742740701443D-12,
     4   0.143306623497460041905D-12,-.201896879770754790660D-13,
     5   0.269515156244116491200D-14,-.341261601864907231581D-15,
     6   0.410291303106453950995D-16,-.468853493580955956563D-17,
     7   0.509741945562524899837D-18,-.527775695640277667793D-19,
     8   0.520883539147323432135D-20,-.490478080105813790007D-21,
     9   0.441032867163910129180D-22,-.379025707597266729508D-23,
     *   0.311584766397314472065D-24,-.245214866516167183352D-25,
     1   0.184894309501480158180D-26,-.133671799212327758413D-27,
     2   0.869252241732826621345D-29/
  
c 
c        In this cycle, eps=.100000D-19, nterms= 85,
c        c= 0.504573192723836D+02
c 
         data bell20/
     1   0.735358015096166511546D+00,-.388704560007989959563D+00,
     2   0.255811004360663153803D+00,-.168841370699982347173D+00,
     3   0.107233590350622485544D+00,-.645327353519947354932D-01,
     4   0.365319356937360421485D-01,-.193803691298746776219D-01,
     5   0.961539505438768110210D-02,-.445702382555369934587D-02,
     6   0.192941468688763375708D-02,-.780046430945645798129D-03,
     7   0.294623446905054185002D-03,-.104014717060947425876D-03,
     8   0.343477688573561559719D-04,-.106175446354719982976D-04,
     9   0.307506606329771143435D-05,-.835219073626222264638D-06,
     *   0.212957601102860370846D-06,-.510244492720935690567D-07,
     1   0.115003557479440885896D-07,-.244091763973850557749D-08,
     2   0.488390986951133025171D-09,-.922186180433024687356D-10,
     3   0.164500690116027187609D-10,-.277506293728035969360D-11,
     4   0.443186529988076577946D-12,-.670741359054935706993D-13,
     5   0.962980218543576102557D-14,-.131281737283442431450D-14,
     6   0.170113317148188338446D-15,-.209716590541808629797D-16,
     7   0.246202201267910321207D-17,-.275492960281873504149D-18,
     8   0.294085587481400417763D-19,-.299748692505054835286D-20,
     9   0.291962640566717746378D-21,-.271982099240327445296D-22,
     *   0.242517821200451943596D-23,-.207145399841611456585D-24,
     1   0.169614956921019178061D-25,-.133238653304809818091D-26,
     2   0.936763727950020734223D-28/
c 
c        In this cycle, eps \ sim .100000D-29, nterms= 108,
c        c= 75
c 
        data bell30/
     1  0.7401003390334442549639551410894D+00,
     2  -.4039792893444751811649861340890D+00,
     3  0.2816552207506002340689774508343D+00,
     4  -.2020080395800500746477374259562D+00,
     5  0.1429654153219115256382169807896D+00,
     6  -.9827996050240161882711374725995D-01,
     7  0.6512419088353634244902633479997D-01,
     8  -.4142046556758032214156380391064D-01,
     9  0.2522180259252300846010920465557D-01,
     *  -.1468033008305760017153737667144D-01,
     1  0.8159415794042204081965782862903D-02,
     2  -.4327900576887380317606967538237D-02,
     3  0.2189960562478849604837177008931D-02,
     4  -.1056973291770213540395563196979D-02,
     5  0.4865743707859916600723947734126D-03,
     6  -.2136619746154417901979742864622D-03,
     7  0.8950960745494720796827825325605D-04,
     8  -.3578301883080004835393057782618D-04,
     9  0.1365441231398682231140059232348D-04,
     *  -.4975085463161614166480618700030D-05,
     1  0.1731481809853161696558335121560D-05,
     2  -.5758327414006357964507231077416D-06,
     3  0.1830701540394545713426901868173D-06,
     4  -.5566368040745573885237065532352D-07,
     5  0.1619410504713493126731622826426D-07,
     6  -.4509992785860365049564503439899D-08,
     7  0.1202918875523646884143950538006D-08,
     8  -.3074324357904796130824512996154D-09,
     9  0.7532337556048028473422951783152D-10,
     *  -.1770077765061837201239827173937D-10,
     1  0.3991667118733698843346408880083D-11,
     2  -.8642376246534969101976591781463D-12,
     3  0.1797407029096601632427827277296D-12,
     4  -.3592619540151246855090211921991D-13,
     5  0.6904684402014827111245324945646D-14,
     6  -.1276613279387706031605851842660D-14,
     7  0.2271806917898430132256577882142D-15,
     8  -.3893066889111267071765463623081D-16,
     9  0.6427329395112537996170808461780D-17,
     *  -.1022810437153742844926588280561D-17,
     1  0.1569607015810499759624284243634D-18,
     2  -.2323917278045723334393355868936D-19,
     3  0.3321119300673432388457980735101D-20,
     4  -.4583315419668875991766017528756D-21,
     5  0.6110841577949194807724917921207D-22,
     6  -.7874807919378144183618503745411D-23,
     7  0.9812626955028325919093090378532D-24,
     8  -.1182831022573972135955966673684D-24,
     9  0.1379859713335787755250815965259D-25,
     *  -.1558481566513015006344514663755D-26,
     1  0.1704903017034154895509494403298D-27,
     2  -.1807189838523180355082101465060D-28,
     3  0.1856934576717837399892556058504D-29,
     4  -.1850813163486313973175087584352D-30,
     5  0.1794972686134895845889383898590D-31/
c 
c        In this cycle, eps \ sim .100000D-23, nterms= 98,
c        c= 60
c 
        data bell24/
     1  0.7376569150499899288730067077521D+00,
     2  -.3960469583578922886766363080339D+00,
     3  0.2680450622372782881533846481023D+00,
     4  -.1841930165160075579946334897654D+00,
     5  0.1232848699395489387192534135964D+00,
     6  -.7912964773522488601264220788724D-01,
     7  0.4834010507523184181721090941431D-01,
     8  -.2799323759250688324342013734011D-01,
     9  0.1533086083431482781955283920352D-01,
     *  -.7929855632383423701740455494714D-02,
     1  0.3871066056695296779637704456191D-02,
     2  -.1782862096964024490982554044630D-02,
     3  0.7746454486330782856449618126858D-03,
     4  -.3175775247520704135436587016884D-03,
     5  0.1228815441093416029034397963239D-03,
     6  -.4489435774242453465673194427754D-04,
     7  0.1549463970999094733651549980605D-04,
     8  -.5054778936610746494530103327760D-05,
     9  0.1559637379540948672898476981885D-05,
     *  -.4554430359767872817245468139768D-06,
     1  0.1259609372397812186892833454888D-06,
     2  -.3301736333037468865695977996514D-07,
     3  0.8208710976134413144579428468315D-08,
     4  -.1937138791194905493947147428810D-08,
     5  0.4342407848563207949583635011927D-09,
     6  -.9253746453837205030903597753838D-10,
     7  0.1876097496911977951550419254167D-10,
     8  -.3621406259103370473691936027294D-11,
     9  0.6660622628670956833928158232286D-12,
     *  -.1168146948721819744350617716135D-12,
     1  0.1955021077696387163291453106253D-13,
     2  -.3124634894756119959413332489116D-14,
     3  0.4772647365010470297997700453610D-15,
     4  -.6971807922594418287667440123049D-16,
     5  0.9746895470321547030749587720741D-17,
     6  -.1305045528905140142039067263925D-17,
     7  0.1674640931525117130624810787872D-18,
     8  -.2060853345522979522687384881990D-19,
     9  0.2433821972151491688445386285424D-20,
     *  -.2760120867798361309712214791927D-21,
     1  0.3007740856529759085526115439681D-22,
     2  -.3151340974219393212055575030744D-23,
     3  0.3176558774361628967296637457980D-24,
     4  -.3082357453494463276634864836127D-25,
     5  0.2880886080419186511464804970638D-26,
     6  -.2594972889674391810598568857144D-27,
     7  0.2253948595306016427937490699150D-28,
     8  -.1888831571523427244584704442031D-29,
     9  0.1527987905363313017359856457855D-30,
     *  -.1195386970674786508405399540148D-31/
c 
c        In this cycle, eps \ sim .100000D-27, nterms= 104,
c        c= 70
c 
        data bell28/
     1  0.7394009277152755713779377747853D+00,
     2  -.4016951293906653937242505329425D+00,
     3  0.2776940486405055349310762265527D+00,
     4  -.1967433488518204604230064054336D+00,
     5  0.1370338863912710837775173885097D+00,
     6  -.9236883123972142085843729765901D-01,
     7  0.5979741383374350718409573515253D-01,
     8  -.3702302758325893422193979051835D-01,
     9  0.2186811295284011539089603065193D-01,
     *  -.1230374144493243133954152044514D-01,
     1  0.6587847673872607450824708445299D-02,
     2  -.3355002391828535858140234460901D-02,
     3  0.1624664771699719412020337499605D-02,
     4  -.7480293816546848332741833273105D-03,
     5  0.3274779263448460571234251000652D-03,
     6  -.1363408333718163756407100730685D-03,
     7  0.5399574810316953284853937263806D-04,
     8  -.2034798929825633248878982889466D-04,
     9  0.7299178900214270887002546522344D-05,
     *  -.2493437305613362821028672562839D-05,
     1  0.8115059739959477295830314730266D-06,
     2  -.2517464164972203543397860197894D-06,
     3  0.7447883059920235287491536855908D-07,
     4  -.2102462259690675864355574460919D-07,
     5  0.5666092502147748480157473601407D-08,
     6  -.1458607620896322455941901519750D-08,
     7  0.3588687724198290655654356997622D-09,
     8  -.8443468422306225558708829778703D-10,
     9  0.1900822101819068653515647340861D-10,
     *  -.4096808555560525082398733665445D-11,
     1  0.8458276383138933477653296784727D-12,
     2  -.1673778650981368661466748955479D-12,
     3  0.3176443072599539528151437452320D-13,
     4  -.5784376033772710873752076565195D-14,
     5  0.1011318548558770770041359418441D-14,
     6  -.1698544192853283453876739622970D-15,
     7  0.2741965916967917978322810403851D-16,
     8  -.4256765362095115136530946518421D-17,
     9  0.6358621705208922397528649984854D-18,
     *  -.9144119271589186508737112149679D-19,
     1  0.1266610523904012473430249003872D-19,
     2  -.1690790868466460928549535614447D-20,
     3  0.2176216229999110009812840446790D-21,
     4  -.2702064513831074758008155190908D-22,
     5  0.3238049063889320077694375640457D-23,
     6  -.3746916563609528479464534636102D-24,
     7  0.4188636261050892475168881639343D-25,
     8  -.4525647608295311032534020721943D-26,
     9  0.4728201919548426625395195309995D-27,
     *  -.4778732297339341570086761999930D-28,
     1  0.4674376277285212244277066962378D-29,
     2  -.4427401142232448620065725465177D-30,
     3  0.4066242902849548343980800717360D-31/
  
c 
c       process the 1-digit case
c 
        if(ndigits .ne. 1) goto 1100
c 
        nterms=23
        nn=12
        call prolcpy2(bell1,nn,coesbell,nterms)
        return
 1100 continue
c 
c       process the 2-digit case
c 
        if(ndigits .ne. 2) goto 1200
c 
        nterms=29
        nn=15
        call prolcpy2(bell2,nn,coesbell,nterms)
        return
 1200 continue
c 
c       process the 3-digit case
c 
        if(ndigits .ne. 3) goto 1300
c 
        nterms=33
        nn=17
        call prolcpy2(bell3,nn,coesbell,nterms)
        return
 1300 continue
c 
c       process the 4-digit case
c 
        if(ndigits .ne. 4) goto 1400
c 
        nterms=35
        nn=18
        call prolcpy2(bell4,nn,coesbell,nterms)
        return
 1400 continue
c 
c       process the 5-digit case
c 
        if(ndigits .ne. 5) goto 1500
c 
        nterms=39
        nn=20
        call prolcpy2(bell5,nn,coesbell,nterms)
        return
 1500 continue
c 
c       process the 6-digit case
c 
        if(ndigits .ne. 6) goto 1600
c 
        nterms=41
        nn=21
        call prolcpy2(bell6,nn,coesbell,nterms)
        return
 1600 continue
c 
c       process the 7-digit case
c 
        if(ndigits .ne. 7) goto 1700
c 
        nterms=43
        nn=22
        call prolcpy2(bell7,nn,coesbell,nterms)
        return
 1700 continue
c 
c       process the 8-digit case
c 
        if(ndigits .ne. 8) goto 1800
c 
        nterms=47
        nn=24
        call prolcpy2(bell8,nn,coesbell,nterms)
        return
 1800 continue
c 
c       process the 9-digit case
c 
        if(ndigits .ne. 9) goto 1900
c 
        nterms=49
        nn=25
        call prolcpy2(bell9,nn,coesbell,nterms)
        return
 1900 continue
c 
c       process the 10-digit case
c 
        if(ndigits .ne. 10) goto 2000
c 
        nterms=51
        nn=26
        call prolcpy2(bell10,nn,coesbell,nterms)
        return
 2000 continue
c 
c       process the 11-digit case
c 
        if(ndigits .ne. 11) goto 2100
c 
        nterms=67
        nn=34
        call prolcpy2(bell11,nn,coesbell,nterms)
        return
 2100 continue
c 
c       process the 12-digit case
c 
        if(ndigits .ne. 12) goto 2200
c 
        nterms=69
        nn=35
        call prolcpy2(bell12,nn,coesbell,nterms)
        return
 2200 continue
c 
c       process the 13-digit case
c 
        if(ndigits .ne. 13) goto 2300
c 
        nterms=73
        nn=37
        call prolcpy2(bell13,nn,coesbell,nterms)
        return
 2300 continue
c 
c       process the 14-digit case
c 
        if(ndigits .ne. 14) goto 2400
c 
        nterms=75
        nn=38
        call prolcpy2(bell14,nn,coesbell,nterms)
        return
 2400 continue
c 
c       process the 15-digit case
c 
        if(ndigits .ne. 15) goto 2500
c 
        nterms=77
        nn=39
        call prolcpy2(bell15,nn,coesbell,nterms)
        return
 2500 continue
c 
c       process the 16-digit case
c 
        if(ndigits .ne. 16) goto 2600
c 
        nterms=79
        nn=38
        call prolcpy2(bell16,nn,coesbell,nterms)
        return
 2600 continue
c 
c       process the 17-digit case
c 
        if(ndigits .ne. 17) goto 2700
c 
        nterms=81
        nn=41
        call prolcpy2(bell17,nn,coesbell,nterms)
        return
 2700 continue
c 
c       process the 18-digit case
c 
        if(ndigits .ne. 18) goto 2800
c 
        nterms=83
        nn=42
        call prolcpy2(bell18,nn,coesbell,nterms)
        return
 2800 continue
c 
c       process the 19-digit case
c 
        if(ndigits .ne. 19) goto 2900
c 
        nterms=85
        nn=43
        call prolcpy2(bell19,nn,coesbell,nterms)
        return
 2900 continue
c 
c       process the 20-digit case
c 
        if(ndigits .ne. 20) goto 3000
c 
        nterms=85
        nn=43
        call prolcpy2(bell20,nn,coesbell,nterms)
        return
 3000 continue
c 
c       process the 24-digit case
c 
        if(ndigits .ne. 24) goto 3400
c 
        nterms=98
        nn=50
        call prolcpy2(bell24,nn,coesbell,nterms)
        return
 3400 continue
c 
c       process the 28-digit case
c 
        if(ndigits .ne. 28) goto 3800
c 
        nterms=103
        nn=52
        call prolcpy2(bell28,nn,coesbell,nterms)
        return
 3800 continue
c 
c       process the 30-digit case
c 
        if(ndigits .ne. 30) goto 4000
c 
        nterms=108
        nn=55
        call prolcpy2(bell30,nn,coesbell,nterms)
        return
 4000 continue
        return
        end
c 
c 
c 
c 
c 
        subroutine prolcpy2(bell,nn,coesbell,nterms)
        implicit real *8 (a-h,o-z)
        save
        dimension bell(1),coesbell(1)
c 
        do 1200 i=1,nterms+1
        coesbell(i)=0
 1200 continue
c 
        coesbell(1)=0.5d0
        do 1400 i=1,nn
        coesbell(i*2)=bell(i)
 1400 continue
        return
        end
  
  
  
  
c 
c 
c 
c 
c 
      SUBROUTINE proserev(X,VAL,der,PEXP,N)
      IMPLICIT REAL *8 (A-H,O-Z)
        save
      REAL *8 PEXP(1)
C 
C     This subroutine computes the value and the derivative
c     of a gaussian expansion with coefficients PEXP
C     at point X in interval [-1,1].
c 
c                input parameters:
c 
C     X = evaluation point
C     PEXP = expansion coefficients
C     N  = order of expansion
c   IMPORTANT NOTE: n is {\bf the order of the expansion, which is
c         one less than the number of terms in the expansion!!}
c 
c                output parameters:
c 
C     VAL = computed value
C     der = computed value of the derivative
C 
C 
        done=1
        pjm2=1
        pjm1=x
        derjm2=0
        derjm1=1
c 
        val=pexp(1)*pjm2+pexp(2)*pjm1
        der=pexp(2)
c 
        DO 600 J = 2,N
c 
        pj= ( (2*j-1)*x*pjm1-(j-1)*pjm2 ) / j
        val=val+pexp(j+1)*pj
c 
        derj=(2*j-1)*(pjm1+x*derjm1)-(j-1)*derjm2
c 
        derj=derj/j
        der=der+pexp(j+1)*derj
c 
        pjm2=pjm1
        pjm1=pj
        derjm2=derjm1
  
        derjm1=derj
 600   CONTINUE
c 
      RETURN
      END
c 
c 
c 
c 
c 
        subroutine proltrap(ndigits,n,ts,xs,whts)
        implicit real *8 (a-h,o-z)
        save
        dimension coesbell(100),xs(1),ts(1),whts(1)
c 
        data ndigold/-1/
c 
c       This subroutine constructs the "universal" quadrature
c       rule based on the prolate bell. To be more specific,
c       the subroutine re-parametrizes the interval [-1,1],
c       replacing the parameter $x \in [-1,1]$ with the parameter
c       $t \in [-1,1]$, in such a manner that all derivatives
c       of x with respect to t are equal to zero at the points
c       -1,1 (to precision 1.0E-(ndigits)); after that, it
c       constructs the trapezoidal discretization in t on the
c       interval [-1,1], finds the corresponding points in
c       x (obviously, these cluster near the ends), and evaluates
c       the corresponding weights (by multiplying dxtd by the
c       sampling interval in t, what a surprise!)
c 
c       The quadrature produced by this subroutine is "universal"
c       in the sense that it integrates effectively functions with
c       a wide class of singularities at the ends.
c 
c       IMPORTANT NOTE: The n trapezoidal nodes produced by this
c       subroutine include the ends. However, the weights associated
c       with the end-nodes are quite small, so that the end-nodes
c       can be omitted with a fairly minimal penalty in accuracy.
c       When the function to be integrated is infinite at one or
c       both of the points -1, 1, the corresponding end-point HAS
c       TO BE OMITTED (duh!); otherwise, the quadrature will produce
c       an infinite result (of a NaN, or something equally useful).
c       Thus, the produced quadrature can (and often should) be viewed
c       as an (n-2) - point one
c 
c                     Input parameters:
c 
c  ndigits - the number of digits of accuracy to which everything
c       is done; has to be between 1 and 16 (inclusive)
c  n - the number of nodes in the discretization, including the
c       ends (see IMPORTANT NOTE above)
c 
c                     Output parameters:
c 
c  ts - the n trapezoidal nodes on the interval [-1,1], including
c       the ends (see IMPORTANT NOTE above)
c  xs - images of the nodes ts under the parametrization
c  whts - the weights corresponding to the nodes xs
c 
c       . . . if the user-requested number of digits is different from
c             the one requested during the preceding call - retrieve
c             the coefficients of the Legendre expansion of the
c             bell from the subroutine prolbret
c 
        if(ndigold .eq. ndigits) goto 1100
c 
        call prolbret(ier,ndigits,coesbell,nterms)
        ndigold=ndigits
 1100 continue
  
  
        call prin2('in proltrap, coesbell=*',coesbell,nterms)
        call prinf('in proltrap, n=*',n,1)
c 
c       construct the equispaced discretization of the "source"
c       domain
c 
        h=2
        h=h/(n-1)
c 
        do 1200 i=1,n
c 
        ts(i)=(i-1)*h-1
c 
        call proserev(ts(i),xs(i),whts(i),coesbell,Nterms)
c 
        xs(i)=xs(i)*2-1
c 
        whts(i)=whts(i)*h*2
 1200 continue
        return
        end
c 
c 
c 
c 
c 
        subroutine proresf(ndigits,t,x,dxdt)
        implicit real *8 (a-h,o-z)
        save
        dimension coesbell(100)
c 
c 
        data ndigold/-1/
c 
c       This subroutine constructs the image of the point
c       t \in [-1,1] under the "universal reparametrization"
c       based on the the prolate bell. To be more specific,
c       the subroutine re-parametrizes the interval [-1,1],
c       replacing the parameter $x \in [-1,1]$ with the parameter
c       $t \in [-1,1]$, in such a manner that all derivatives
c       of x with respect to t are equal to zero at the points
c       -1,1 (to precision 1.0E-(ndigits)); after that, it
c       constructs the image of the point t under the obtained
c       reparametrization, and also the detivative dxdt at the
c       point t.
c 
c       . . . if the user-requested number of digits is different from
c             the one requested during the preceding call - retrieve
c             the coefficients of the Legendre expansion of the
c             bell from the subroutine prolbret
c 
        if(ndigold .eq. ndigits) goto 1100
c 
        call prolbret(ier,ndigits,coesbell,nterms)
        ndigold=ndigits
c 
 1100 continue
c 
c       evaluate the resampling function and its derivative
c 
        call proserev(t,x,dxdt,coesbell,Nterms)
c 
        x=x*2-1
        dxdt=dxdt*2
        return
        end
