        implicit real *8 (a-h,o-z)
c 
        call prini(6,13)
C 
C       SET ALL PARAMETERS
C 
        PRINT *, 'ENTER nord'
        READ *,nord
        CALL PRINf('nord=*',nord,1)
  
        deltamax=1.0d-1
        deltamin=1.0d-2
  
        deltamax=1.0d-2
        deltamin=1.0d-3
  
        deltamax=1.0d-3
        deltamin=1.0d-4
  
        deltamax=1.0d-5
        deltamin=1.0d-4
  
        deltamax=1.0d-6
        deltamin=1.0d-5
  
cccc        deltamax=20
cccc        deltamin=10
  
  
        do 2200 i=0,3
c 
        itype=i
  
        call prinf('testing itype=*',itype,1)
  
  
  
        call onetest(deltamin,deltamax,nord,itype)
  
 2200 continue
        stop
        end
c 
c 
c 
c 
c 
        subroutine onetest(deltamin,deltamax,nord,itype)
        implicit real *8 (a-h,o-z)
        save
        dimension xs(10000),ws(10000),deltas(10 000),
     1      errs(10 000),rints(10 000),xs2(10000),ws2(10 000)
c 
        external funtest
c 
c       subdivide the interval [deltamin,deltamax] into ntest nodes
c 
        ntest=100
        h=(deltamax-deltamin)/ntest
        do 1200 i=1,ntest
c 
        deltas(i)=deltamin+(i-1)*h+h/2
 1200 continue
c 
cccc        call prin2('array deltas as created*',deltas,ntest)
c 
        do 3000 i=1,ntest
c 
c        retrieve from the subroutine the nodes and weights of the
c        quadrature
  
  
        call tables14(ier,deltas(i),xs2,ws2,npts)
  
cccc        call prin2('after tables14, xs2=*',xs2,npts)
cccc        call prin2('after tables14, ws2=*',ws2,npts)
  
  
c 
c        reflect the nodes in the point x=0 to obtain a quadrature on
c        the interval [-1,1]
c 
        do 1600 j=1,npts
c 
        xs(npts+j)=xs2(j)
        ws(npts+j)=ws2(j)
c 
        xs(npts-j+1)=-xs2(j)
        ws(npts-j+1)=ws2(j)
 1600 continue
  
  
        npts=npts*2
c 
cccc        call prin2('and xs=*',xs,npts)
cccc        call prin2('and ws=*',ws,npts)
  
cccc             stop
  
        call funevin(deltas(i),nord,itype)
c 
c       test the obtained quadrature nodes as quadrature nodes
c 
        d=0
        do 2200 j=1,npts*2
c 
        call funeval(xs(j),val)
        d=d+ws(j)*val
c 
 2200 continue
c 
cccc        call prin2('and the sum of weights is*',d,1)
c 
        a=-1
        b=1
        m=24
        eps=1.0d-14
  
        call adapgaus(ier,a,b,funtest,par1,par2,m,eps,
     1      rint,maxrec,numint)
  
cccc        call prin2('and after adapgaus, rint=*',rint,1)
cccc        call prin2('and after adapgaus, d-rint=*',d-rint,1)
  
        errs(i)=d-rint
        rints(i)=rint
c 
 3000 continue
c 
        call prin2('and rints=*',rints,ntest)
        call prin2('and errs=*',errs,ntest)
  
        return
        end
  
c 
c 
c 
c 
c 
        function funtest(x,par1,par2)
        implicit real *8 (a-h,o-z)
        save
  
  
        call funeval(x,val)
  
        funtest=val
        return
        end
c 
c 
c 
c 
c 
        subroutine funeval(x,val)
        implicit real *8 (a-h,o-z)
c 
        save
  
        call funuser2(x,n,d)
  
        val=d
        if(itype .eq. 0) return
  
        if(itype .eq. 1) val=d*log(x**2+delta**2)
        if(itype .eq. 2) val=d*x/(x**2+delta**2)
        if(itype .eq. 3) val=d*delta/(x**2+delta**2)
cccc        if(itype .eq. 3) val=d*(x**2-delta**2)/(x**2+delta**2)  **2
        return
c 
c 
c 
c 
        entry funevin(delta7,n7,itype7)
c 
        delta=delta7
        n=n7
        itype=itype7
c 
        call dumsub(delta)
        call dumsub(n)
        call dumsub(itype)
  
cccc        call prin2('in funevin, delta=*',delta,1)
cccc        call prinf('in funevin, n=*',n,1)
cccc        call prinf('in funevin, itype=*',itype,1)
        return
        end
c 
c 
c 
c 
c 
        subroutine dumsub(x)
        implicit real *8 (a-h,o-z)
        save
        dimension x(1)
c 
c 
        ii=0
        return
        end
c 
c 
c 
c 
c 
        subroutine funuser2(x,i,f)
        implicit real *8 (a-h,o-z)
c 
        save
        call legepol(x,i,f,der)
c 
        return
        end
c 
c 
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c 
c 
c        This is the end of the testing code and the beginning of the
c        quadrature tables proper.
c 
ccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c 
c 
        subroutine tables14(ier,y,xsout,wsout,npts)
        implicit real *8 (a-h,o-z)
        save
        dimension xs1(19),ws1(19),xs2(25),ws2(25),
     1      xs3(29),ws3(29),xs4(33),ws4(33),xs5(37),ws5(37),
     2      xs6(45),ws6(45)
c 
c        This subroutine returns to the user a quadrature for
c        integrals of the form
c 
c              int_{-1}^1 p(x) * s(x) dx,                                  (1)
c 
c        where p is a polynomial of order up to 19, and s a linear
c        combination of functions
c 
c              s_0(x) = 1,                                                 (2)
c              s_1(x) = log(x**2+y**2),                                    (3)
c              s_2(x) = d/dx (log(x**2+y**2))= x/(x**2+y**2),              (4)
c              s_3(x) = d/dy (log(x**2+y**2))= y/(x**2+y**2),              (5)
c 
c        and
c 
c              y \in [1.0d-6, \infty).                                     (6)
c 
c       PLEASE NOTE THAT IN REALITY, THERE ARE ONLY 6 QUADRATURE FORMULAE,
c       for 6 regimes:
c 
c              x \in [1,\infty), x \in [1.0d-1,1], x \in [1.0d-2,1.0d-1],
c 
c              x \in [1.0d-3,1.0d-2], x \in [1.0d-4,1.0d-3],
c 
c              x \in [1.0d-5,1.0d-4], x \in [1.0d-6,1.0d-5].
c 
c 
c                     Input parameters:
c 
c  y - the parameter in formulae (2)-(5)
c 
c                     Output parameters:
c 
c  ier - error return code. ier=0 means successful execution
c                           ier=16 means that y < 1.0d-6
c  xsout - the nodes of the quadrature formula
c  wsout - the weights of the quadrature formula
c  npts - the number of nodes returned in the arrays xsout, wsout. Ranges
c        from 19 to 45
c 
c 
c  . . . Data for  19 nodes, 14 digits, on the singularity
c        interval [1.0d-1,1]
c 
        data xs1/
     1  0.2087250843688407D-02,0.1074538332249132D-01,
     2  0.2552066952869184D-01,0.4572268820344593D-01,
     3  0.7122824844870737D-01,0.1026008080533192D+00,
     4  0.1409092646803908D+00,0.1874342360211804D+00,
     5  0.2433516736271579D+00,0.3094067853832211D+00,
     6  0.3855817474368377D+00,0.4707877403427539D+00,
     7  0.5626453876836505D+00,0.6574359255074106D+00,
     8  0.7502879654324627D+00,0.8356060270782614D+00,
     9  0.9076738579951430D+00,0.9613198855530916D+00,
     *  0.9925382130306444D+00/
c 
        data ws1/
     1  0.5325327130912859D-02,0.1185854411549992D-01,
     2  0.1756743687534724D-01,0.2281451220801240D-01,
     3  0.2829405332991372D-01,0.3463430058753099D-01,
     4  0.4220132181586765D-01,0.5105004244756329D-01,
     5  0.6091464302003986D-01,0.7119790087534379D-01,
     6  0.8097442376757957D-01,0.8904198697487931D-01,
     7  0.9405042301326266D-01,0.9471143968578631D-01,
     8  0.9004971513170974D-01,0.7962232901623678D-01,
     9  0.6364094768111181D-01,0.4297451523201895D-01,
     *  0.1907613709138308D-01/
c 
c  Data for  25 nodes, 14 digits, on the singularity interval [1.0d-2,1.0d-1]
c 
        data xs2/
     1  0.2232270655669160D-03,0.1143615121519300D-02,
     2  0.2699384089724598D-02,0.4813521707466705D-02,
     3  0.7491534725865975D-02,0.1084094790820903D-01,
     4  0.1506721709314775D-01,0.2047355116644077D-01,
     5  0.2747729590491612D-01,0.3664850580818505D-01,
     6  0.4877844065120635D-01,0.6498976005611158D-01,
     7  0.8689310646802195D-01,0.1167490023254912D+00,
     8  0.1574784937132509D+00,0.2122365764730871D+00,
     9  0.2833715188899774D+00,0.3711124405904703D+00,
     *  0.4727568643573220D+00,0.5828103824310141D+00,
     1  0.6938488717062751D+00,0.7976195713968146D+00,
     2  0.8860710586758054D+00,0.9522095629488122D+00,
     *  0.9907755321883088D+00/
c 
        data ws2/
     1  0.5687963422900041D-03,0.1255215512072562D-02,
     2  0.1842290936333668D-02,0.2386663804577770D-02,
     3  0.2987420988897774D-02,0.3745676112250267D-02,
     4  0.4757133440073805D-02,0.6124466921102449D-02,
     5  0.7976921291411633D-02,0.1049556366041148D-01,
     6  0.1394874059537270D-01,0.1873929245707245D-01,
     7  0.2544320793580482D-01,0.3476188164778334D-01,
     8  0.4724109056051983D-01,0.6269058659235296D-01,
     9  0.7963228503830952D-01,0.9539600203516705D-01,
     *  0.1069613952445634D+00,0.1118892162909920D+00,
     1  0.1087949519110626D+00,0.9739026805230109D-01,
     2  0.7833592256745382D-01,0.5305543717437284D-01,
     *  0.2357957288744995D-01/
c 
c  Data for  29 nodes, 14 digits, on the singularity interval [1.0d-3,1.0d-2]
c 
        data xs3/
     1  0.2770261968014411D-04,0.1399814561413492D-03,
     2  0.3233448052244018D-03,0.5605155779515022D-03,
     3  0.8400093591632722D-03,0.1160568453481656D-02,
     4  0.1553070354809370D-02,0.2070944184167712D-02,
     5  0.2758398579756180D-02,0.3658673699110057D-02,
     6  0.4831426580382296D-02,0.6393266104593788D-02,
     7  0.8593372302588800D-02,0.1188912203135445D-01,
     8  0.1708223130264417D-01,0.2559934781993840D-01,
     9  0.3983675942129214D-01,0.6331218696589666D-01,
     *  0.1003163267642089D+00,0.1549508877049297D+00,
     1  0.2296935739711173D+00,0.3240495361244899D+00,
     2  0.4341050420644917D+00,0.5531456269769505D+00,
     3  0.6727882476774424D+00,0.7841199249653496D+00,
     4  0.8786631984046764D+00,0.9491592240679582D+00,
     *  0.9901929501067577D+00/
c 
        data ws3/
     1  0.7034393328658258D-04,0.1510957891143991D-03,
     2  0.2126609241843529D-03,0.2598004567497634D-03,
     3  0.2984352331026052D-03,0.3479589037341921D-03,
     4  0.4467879021724011D-03,0.5959690564270349D-03,
     5  0.7859451168319339D-03,0.1023952726352052D-02,
     6  0.1339518554242713D-02,0.1824629855923426D-02,
     7  0.2649847122877579D-02,0.4070386892296295D-02,
     8  0.6547226550855715D-02,0.1088296234112150D-01,
     9  0.1818372444274091D-01,0.2949852645306755D-01,
     *  0.4521854835044551D-01,0.6448856265509468D-01,
     1  0.8492213689419826D-01,0.1031254372817932D+00,
     2  0.1158463458449800D+00,0.1208183476453421D+00,
     3  0.1169653418163621D+00,0.1042721011896674D+00,
     4  0.8359433967363401D-01,0.5648656412137365D-01,
     *  0.2507250227202856D-01/
c 
c  Data for 33 nodes, 14 digits, on the singularity interval [1.0d-4,1.0d-3]
c 
        data xs4/
     1  0.3644713931421184D-05,0.3833086334180809D-05,
     2  0.1155697411173322D-04,0.1277563755420148D-04,
     3  0.1493537462775964D-04,0.4773483884833319D-04,
     4  0.8160473847473887D-04,0.1106959135692741D-03,
     5  0.1110937753093654D-03,0.1691690984284987D-03,
     6  0.2356791694392939D-03,0.3227453468717604D-03,
     7  0.4388984465920077D-03,0.5976245595770220D-03,
     8  0.8236992573437351D-03,0.1167891187500925D-02,
     9  0.1742892746718943D-02,0.2818204473102596D-02,
     *  0.5065860779649909D-02,0.1007854062762332D-01,
     1  0.2100622124726570D-01,0.4251384787986132D-01,
     2  0.7953099023955461D-01,0.1357601955263102D+00,
     3  0.2128744294666074D+00,0.3098945885863123D+00,
     4  0.4227116772078525D+00,0.5444678507798964D+00,
     5  0.6666329497724395D+00,0.7801647356239513D+00,
     6  0.8764847358859240D+00,0.9482590416965173D+00,
     *  0.9900206300274767D+00/
c 
        data ws4/
     1  0.4424762681116677D-03,-.4718217671771023D-03,
     2  0.8057342045591369D-03,-.1159568832071470D-02,
     3  0.4164192083526191D-03,0.2993186594096367D-04,
     4  0.4013293953393364D-04,-.1046407013203991D-02,
     5  0.1084155477719223D-02,0.5852463341197330D-04,
     6  0.7560108051795764D-04,0.9990672415288487D-04,
     7  0.1345524158941779D-03,0.1868082569127706D-03,
     8  0.2732799298256923D-03,0.4325142473424651D-03,
     9  0.7587003046891187D-03,0.1495234303173035D-02,
     *  0.3252654434451626D-02,0.7296178393455655D-02,
     1  0.1536074568924044D-01,0.2850427974486051D-01,
     2  0.4615770614541669D-01,0.6658975471656734D-01,
     3  0.8748643003880415D-01,0.1058617527395875D+00,
     4  0.1186096959943498D+00,0.1234611131114139D+00,
     5  0.1193458484024867D+00,0.1062750474494473D+00,
     6  0.8513239207688312D-01,0.5749638633655612D-01,
     *  0.2551384047879118D-01/
c 
c  Data for  37 nodes, 14 digits, on the singularity interval [1.0d-5,1.0d-4]
c 
        data xs5/
     1  0.5140603352048050D-06,0.5769925630882810D-06,
     2  0.1074465856718992D-05,0.1701386301640275D-05,
     3  0.1838186880680028D-05,0.6403737440161242D-05,
     4  0.6469522095576703D-05,0.8947559635549491D-05,
     5  0.1384290402316880D-04,0.1978421732399947D-04,
     6  0.2729760998657485D-04,0.3673770639928630D-04,
     7  0.4882569299097518D-04,0.6556896555221080D-04,
     8  0.9025691057926953D-04,0.1275907416842105D-03,
     9  0.1889397786870249D-03,0.3146135249212166D-03,
     *  0.6355766532096824D-03,0.1565013997270079D-02,
     1  0.4241378283180212D-02,0.1128331358133079D-01,
     2  0.2743161862036993D-01,0.5860077706908143D-01,
     3  0.1094232155994092D+00,0.1809176395488594D+00,
     4  0.2681622077202391D+00,0.3519169269143176D+00,
     5  0.4211092373561543D+00,0.5161660174431073D+00,
     6  0.6155165094144198D+00,0.6981332796983927D+00,
     7  0.7802704189933710D+00,0.8624491932934439D+00,
     8  0.9283272631947035D+00,0.9714593472927555D+00,
     *  0.9944338480609124D+00/
c 
        data ws5/
     1  0.3959959014834652D-04,-.5069769025682576D-04,
     2  0.2794119392747515D-04,-.7415498552557152D-04,
     3  0.6137411448861561D-04,0.6195121728577761D-04,
     4  -.5970279570984275D-04,0.4982727372175764D-05,
     5  0.5290089635993664D-05,0.6665395965176869D-05,
     6  0.8415332990470125D-05,0.1056258994186597D-04,
     7  0.1395252599862205D-04,0.2008705537455250D-04,
     8  0.3002109851709212D-04,0.4618799273758709D-04,
     9  0.8241639531021497D-04,0.1879597285023828D-03,
     *  0.5154487419285862D-03,0.1520752767568907D-02,
     1  0.4251898836381251D-02,0.1063852120223888D-01,
     2  0.2269020782980132D-01,0.4045985929188918D-01,
     3  0.6138265748375303D-01,0.8088499982189616D-01,
     4  0.9077884263246287D-01,0.7103445211589470D-01,
     5  0.8025121057920493D-01,0.1030560882335383D+00,
     6  0.9143987529498550D-01,0.7835865722259891D-01,
     7  0.8529528635684657D-01,0.7602134562235924D-01,
     8  0.5467777643486590D-01,0.3223300326672063D-01,
     *  0.1408626468835922D-01/
c 
c  Data for 45 nodes, 14 digits, on the singularity interval [1.0d-6,1.0d-5]
c 
        data xs6/
     1  0.8637076739260951D-07,0.1001848282109600D-06,
     2  0.1290846737993955D-06,0.1428689530864235D-06,
     3  0.1917861256428498D-06,0.1964891100729674D-06,
     4  0.5723536774768821D-06,0.1071128619010134D-05,
     5  0.1084286409942875D-05,0.1116212917487729D-05,
     6  0.1141448040105956D-05,0.2230142757066723D-05,
     7  0.2250151416880733D-05,0.2273429281475065D-05,
     8  0.3709346718359573D-05,0.3790606344133470D-05,
     9  0.3903188678487140D-05,0.3979552394383188D-05,
     *  0.5807070391453805D-05,0.8546330826761518D-05,
     1  0.1257411029402539D-04,0.1961719263242744D-04,
     2  0.3936813972690758D-04,0.7236844701202499D-04,
     3  0.7739058733340595D-04,0.4510405882028613D-03,
     4  0.2323807521478019D-02,0.8411124413119899D-02,
     5  0.2298540643900102D-01,0.5040112908740789D-01,
     6  0.8937769820343511D-01,0.1317066438344698D+00,
     7  0.1787512976541117D+00,0.2355435571073331D+00,
     8  0.3057385032325077D+00,0.3972429744259604D+00,
     9  0.5016373728482045D+00,0.6036375055195619D+00,
     *  0.6848200458073651D+00,0.7558166228476299D+00,
     1  0.8217803404969807D+00,0.8743159169679778D+00,
     2  0.9322473265036618D+00,0.9764627426870124D+00,
     *  0.9971238278430024D+00/
c 
        data ws6/
     1  0.4180772549643203D-04,-.1171938464621395D-03,
     2  0.3020116111124652D-03,-.2773840196744939D-03,
     3  0.2586630560953570D-03,-.2075602578442898D-03,
     4  0.4704301523369255D-06,-.2316750728457269D-03,
     5  0.4215973095343504D-03,-.3128228234673708D-03,
     6  0.1237748505130005D-03,0.5210200416759127D-04,
     7  -.9324201499701748D-04,0.4215750616223146D-04,
     8  0.1394864745506954D-03,-.3282392525724688D-03,
     9  0.3286008097530844D-03,-.1378956508407296D-03,
     *  0.2363906695010366D-05,0.3256432437237689D-05,
     1  0.5004834295981005D-05,0.1021791576060523D-04,
     2  0.4055760166518069D-04,-.4283782395627221D-03,
     3  0.5320301727700323D-03,0.7853398071526058D-03,
     4  0.3416587935459908D-02,0.9471815965692702D-02,
     5  0.2052776159297227D-01,0.3415460226428656D-01,
     6  0.4208639307037686D-01,0.4284016520272133D-01,
     7  0.5237285536080505D-01,0.6139774493785227D-01,
     8  0.8102089863659153D-01,0.1001884471525492D+00,
     9  0.1061400101656840D+00,0.9418549290886421D-01,
     *  0.7038555034813666D-01,0.7322683452590756D-01,
     1  0.5475953754438078D-01,0.5669966595950441D-01,
     2  0.5414380866691511D-01,0.3287952818901570D-01,
     *  0.9147248302160849D-02/
c 
        ier=0
        if(y .gt. 1.0d-6) goto 1400
c 
        ier=16
        return
 1400 continue
c 
c       find the nodes to return and return them things
c 
        if(y .ge. 0.1d0) then
            npts=19
            call movem_things(xs1,ws1,npts,xsout,wsout)
            return
        endif
c 
        if( (y .le. 0.1d0) .and. (y .ge. 0.01d0) )  then
            npts=25
            call movem_things(xs2,ws2,npts,xsout,wsout)
            return
        endif
c 
        if( (y .le. 0.01d0) .and. (y .ge. 0.001d0) )  then
            npts=29
            call movem_things(xs3,ws3,npts,xsout,wsout)
            return
        endif
c 
        if( (y .le. 0.001d0) .and. (y .ge. 0.0001d0) )  then
            npts=33
            call movem_things(xs4,ws4,npts,xsout,wsout)
            return
        endif
c 
        if( (y .le. 0.0001d0) .and. (y .ge. 0.00001d0) )  then
            npts=37
            call movem_things(xs5,ws5,npts,xsout,wsout)
            return
        endif
c 
        if( (y .le. 0.00001d0) .and. (y .ge. 0.000001d0) )  then
            npts=45
            call movem_things(xs6,ws6,npts,xsout,wsout)
            return
        endif
c 
        return
        end
c 
c 
c 
c 
c 
        subroutine movem_things(xs,ws,npts,xsout,wsout)
        implicit real *8 (a-h,o-z)
        save
        dimension xs(1),ws(1),xsout(1),wsout(1)
c 
        do 1200 i=1,npts
c 
        xsout(i)=xs(i)
        wsout(i)=ws(i)
 1200 continue
        return
        end
