        implicit real *8 (a-h,o-z)
        real *8 zs(2,100),ws(100),vertx(5),verty(5),xs(100),ys(100),
     1      alphas(25670),rints(100),vals(100),amatr(10000)
c 
        call prini(6,13)
C 
C       SET ALL PARAMETERS
C 
        PRINT *, 'ENTER nord'
        READ *,nord
        CALL PRINf('nord=*',nord,1 )
C 
c       retrieve the nodes and weights corresponding to polynomials
c       of order nord
c 
        call p2inret(ier,nord,zs,ws,n,nzeroes)
  
        call prin2('after p2inret, zs=*',zs,n*2)
        call prin2('after p2inret, ws=*',ws,n)
        call prinf('after p2inret, nzeroes=*',nzeroes,1)
c 
c        plot the retrieved discretization
c 
        vertx(1)=0
        verty(1)=sqrt(3.0d0)
c 
        vertx(2)=-1
        verty(2)=0
c 
        vertx(3)=1
        verty(3)=0
c 
        vertx(4)=vertx(1)
        verty(4)=verty(1)
c 
        d=3
        d=1/sqrt(d)
        verty(1)=verty(1)-d
        verty(2)=verty(2)-d
        verty(3)=verty(3)-d
        verty(4)=verty(4)-d
c 
        do 1200 i=1,n
        xs(i)=zs(1,i)
        ys(i)=zs(2,i)
 1200 continue
c 
        iw=21
        call lotaplot2(iw,xs,ys,n,vertx,verty,4,
     1      'discretization as retrieved*')
c 
c        retrieve the array of coefficients to be used in the
c        evaluation of orthogonal polynomials
c 
        call p2data3(alphas,nmax,length)
  
  
        call prinf('after p2data3, length=*',length,1)
  
  
cccc        call prin2('alphas as retrieved are*',alphas,length)
  
c 
c        evaluate the orthogonal polynomials at the nodes of
c        discretization and check that the quadratures are correct
c 
        nfuns=(nord+1)*(nord+2)/2
        call prinf('nfuns=*',nfuns,1)
        call prinf('nord=*',nord,1)
c 
        do 1600 i=1,nfuns
        rints(i)=0
 1600 continue
c 
        do 2000 i=1,n
c 
        call p2eval(zs(1,i),nord,alphas,vals)
c 
        do 1800 j=1,nfuns
c 
        rints(j)=rints(j)+vals(j)*ws(i)
 1800 continue
 2000 continue
c 
        call prin2('and rints=*',rints,nfuns)
  
        call prin2('and rints(1)^2-3=*',rints(1)**2-3,1)
c 
c 
  
        call svdtest(amatr,n,ncols,nfuns,nord,alphas,zs)
  
        stop
        end
c 
c 
c 
c 
c 
        subroutine svdtest(a,n,ncols,nfuns,nord,
     1    alphas,zs)
        implicit real *8 (a-h,o-z)
        save
        dimension a(n,nfuns),alphas(1),vals(100),zs(2,1),
     1      u(10000),v(10000),s(100),w(40000)
c 
c        construct the matrix of values of orthhogonal polynomials
c        at the nodes on the triangle
c 
c 
        do 2000 i=1,n
c 
        call p2eval(zs(1,i),nord,alphas,vals)
c 
        do 1800 j=1,nfuns
c 
        a(i,j)=vals(j)
 1800 continue
 2000 continue
c 
cccc        call prin2('matrix a as created*',a,nfuns*n)
  
c 
c       SVD the thing
c 
        eps=1.0d-12
c 
        lw=40000
        call svdpivot(ier,a,n,nfuns,u,v,s,ncols,eps,
     1      w,lw,ltot)
  
        call prinf('in svdtest after svdpivot, ncols=*',ncols,1)
        call prin2('in svdtest after svdpivot, s=*',s,ncols)
        call prin2('and the condition number is*',s(1)/s(ncols),1)
c 
        return
        end
c 
c 
c 
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c 
c        This is the end of debugging code and the beginning of the
c        interpolation code proper
c 
cccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccccc
c 
c 
c 
        subroutine p2eval(z,nmax,alphas,vals)
        implicit real *8 (a-h,o-z)
        save
        dimension z(2),alphas(1),vals(1),pn(600),pnm1(200),pnm2(200)
c 
c        This subroutine evaluates at the user-specified point
c        z in R^2 a collection of polynomials orthogonal on the
c        standard triangle with vertices at the points
c 
c          (0,2/sqrt(3)), (-1,-1/sqrt(3)), (-1,-1/sqrt(3).
c 
c        The values of the polynomials are returned in the array
c        vals, ordered starting with order zero and ending with
c        order nmax.
c 
c                    Input parameters:
c 
c  z - the point in R^2 where the polynomials are to be evaluated
c  nmax - the maximum order of the polynomials to be evaluated
c  alphas - array of various coefficients to be used in the evaluation
c        of the orthogonal polynomials. Normally, alpha is obtained
c        by calling the subroutine p2inret (see), which returns
c        an array alpha that can be used for the evaluation of
c        orthogonal polynomials of orders up to 9
c 
c                    Output parameters:
c 
c  vals - the array containing the orthogonal polynomials of the
c        variables z(1),z(2) of orders 0, 1, ..., nmax. Note that
c        the number of elements returned in array vals is
c        (nmax+1)*nmax+2)/2
c 
c       . . . construct the orthogonal polynomial of order 0
c 
        mmm=1
        iii=1
        pnm2(1)=0
        pnm1(1)=1
c 
        mmm=1
        prodpnm1=alphas(mmm)
        pnm1(1)=prodpnm1
        vals(iii)=pnm1(1)
c 
        mmm=mmm+1
        iii=iii+1
c 
c       generate orthogonal polynomials of orders 1,2,...,nmax
c 
        do 2000 n=1,nmax
c 
        call p2evnex(pnm2,pnm1,pn,n,z,alphas,mmm)
c 
        do 1200 j=1,n+1
        pnm2(j)=pnm1(j)
        pnm1(j)=pn(j)
        vals(iii)=pnm1(j)
        iii=iii+1
 1200 continue
c 
 2000 continue
c 
        return
        end
c 
c 
c 
c 
c 
        subroutine p2evnex(pnm2,pnm1,pn,n,z,alphas,mmm)
        implicit real *8 (a-h,o-z)
        save
        dimension z(2),pn(1),pnm1(1),pnm2(1),work2(200),alphas(1)
c 
c       multiply each of orthogonal polynomials of order n-1
c       by the appropriate linear combinations of x,y
c 
        do 1200 i=1,n
c 
        pn(i)=pnm1(i)*z(2)
c 
        pn(i+n)=pnm1(i)*
     1      ( z(1)*sqrt(0.75d0) - z(2)/2 )
c 
        pn(i+n*2)=pnm1(i)*
     1      ( - z(1)*sqrt(0.75d0) - z(2)/2 )
c 
 1200 continue
c 
c       orthogonalize all the new polynomials (obviously, they are all
c       of order n) to the orthogonal polynomials of order n-1
c 
        do 1600 i=1,n*3
c 
        do 1400 j=1,n
c 
        prod=alphas(mmm)
        mmm=mmm+1
        pn(i)=pn(i)-prod*pnm1(j)
 1400 continue
 1600 continue
c 
c       orthogonalize all the new polynomials to the orthogonal
c       polynomials of order n-2
c 
        if(n .eq. 1) goto 2200
  
        do 2000 i=1,n*3
c 
        do 1800 j=1,n-1
c 
        prod=alphas(mmm)
        mmm=mmm+1
        pn(i)=pn(i)-prod*pnm2(j)
 1800 continue
 2000 continue
c 
 2200 continue
c 
c        apply to pn the linear transformation that converted
c        pn into u
c 
        ncols=n+1
        call matvec78(alphas(mmm),pn,work2,n+1,n*3)
c 
        mmm=mmm+3*ncols*n
c 
        do 2400 i=1,n*3
        pn(i)=work2(i)
 2400 continue
c 
        return
        end
c 
c 
c 
c 
c 
        subroutine matvec78(a,x,y,n,m)
        implicit real *8 (a-h,o-z)
        save
        dimension a(m,n),x(m),y(n)
c 
        do 1400 i=1,n
        d=0
        do 1200 j=1,m
        d=d+a(j,i)*x(j)
 1200 continue
        y(i)=d
 1400 continue
        return
        end
c 
c 
c 
c 
c 
        subroutine p2inret(ier,nord,zs,ws,n,nzeroes)
        implicit real *8 (a-h,o-z)
        save
        dimension zs(2,1),ws(1)
c 
c       This subroutine returns to the user the locations of
c       reasonably good (but not optimal) interpolation points
c       on the standard triangle with the vertices
c 
c          (0,2/sqrt(3)), (-1,-1/sqrt(3)), (-1,-1/sqrt(3).
c 
c       The vertices are such that the interpolation with
c       polynomials of user-specfied order nord based on them
c       is reasonably well-conditioned. The subroutine also
c       returns quadrature weights corresponding to the returned
c       nodes; all of these weights are .leq. 0, and they integrate
c       exactly all polynomials of orders .leq. nord. In all cases
c       (except nord=0) several of the weights are equal to zero.
c       These are always the last in the array ws; the numbers of
c       weights as a function of nord are as follows:
c 
c       nord       1   2   3   4   5   6   7   8   9
c 
c       nzeroes    0   3   1   6   3   6   3   6   3
c 
c                Input parameters:
c 
c  nord - the order of polynomials to be interpolated exactly. Must
c       be between 1 and 9 (inclusive)
c 
c                Output aparameters:
c 
c 
c  ier -error return code. ier=0 means successful conclusion
c                          ier=4 means that nord is out of range
c  zs - the array of interpolation nodes
c  ws - the array of weights corresponding to the nodes zs
c  n - the number of elements in arrays zs, ws
c  nzeroes - the nomber of weights in array ws that are equal to zero
c 
c 
c 
c 
        dimension zs4(30),ws4(15),ws1(3),zs1(6),zs2(12),ws2(6),
     1      zs3(20),ws3(10),zs5(42),ws5(21),zs6(56),ws6(28),
     2      zs7(72),ws7(36),zs8(90),ws8(45),zs9(110),ws9(55)
c 
        dimension zs5a(20),zs5b(22),zs6a(40),zs6b(16)
        dimension zs7a(40),zs7b(32)
        dimension zs8a(40),zs8b(40),zs8c(10)
        dimension ws8a(40),ws8b(5)
c 
        equivalence(zs5a(1),zs5(1)),(zs5b(1),zs5a(21))
        equivalence(zs6a(1),zs6(1)),(zs6b(1),zs6a(41))
        equivalence(zs7a(1),zs7(1)),(zs7b(1),zs7a(41))
        equivalence(zs8a(1),zs8(1)),(zs8b(1),zs8(41)),
     1      (zs8c(1),zs8(81))
c 
        equivalence(ws8a(1),ws8(1)),(ws8b(1),ws8(41))
c 
        dimension zs9a(40),zs9b(40),zs9c(30)
        dimension ws9a(20),ws9b(35)
  
        equivalence(zs9a(1),zs9(1)),(zs9b(1),zs9(41)),
     1      (zs9c(1),zs9(81))
        equivalence(ws9a(1),ws9(1)),(ws9b(1),ws9(21))
c 
        data zs1/
     1      -.2499473761618317E+00,-.1443071849102751E+00,
     2      -.8081863055589254E-15, .2886143698205488E+00,
     3       .2499473761618325E+00,-.1443071849102737E+00/
c 
        data ws1/
     1       .7598356856516020E+00, .7598356856515996E+00,
     2       .7598356856516018E+00/
c 
        data zs2/
     1       .7965567555215565E-15,-.2886751345948128E+00,
     2      -.2500000000000003E+00, .1443375672974057E+00,
     3       .2499999999999995E+00, .1443375672974071E+00,
     4      -.4999999999999991E+00,-.2886751345948142E+00,
     5      -.1593113511043113E-14, .5773502691896256E+00,
     6       .5000000000000007E+00,-.2886751345948114E+00/
c 
        data ws2/
     1      -.4079401771524425E-15,-.8066334982817728E-15,
     2      -.8234894180191692E-15, .7598356856516021E+00,
     3       .7598356856516012E+00, .7598356856516021E+00/
c 
        data zs3/
     1      -.6728315630551206E+00,-.3884594840491530E+00,
     2      -.2125010589311115E-14, .7769189680983023E+00,
     3       .6728315630551227E+00,-.3884594840491493E+00,
     4      -.2442752150571546E+00,-.3884891670499324E+00,
     5      -.4585790952888752E+00,-.1730395822943920E-01,
     6       .2143038802317185E+00, .4057931252793703E+00,
     7      -.2143038802317206E+00, .4057931252793691E+00,
     8       .2442752150571567E+00,-.3884891670499311E+00,
     9       .4585790952888752E+00,-.1730395822943673E-01,
     a       .0000000000000000E+00, .0000000000000000E+00/
c 
        data ws3/
     1       .2373014210596727E+00, .2373014210596709E+00,
     2       .2373014210596729E+00, .2612671322959600E+00,
     3       .2612671322959684E+00, .2612671322959704E+00,
     4       .2612671322959608E+00, .2612671322959693E+00,
     5       .2612671322959585E+00,-.7523100766524626E-15/
c 
        data zs4/
     1      -.7211797160893463E+00,-.4163733032182847E+00,
     2      -.2384186119462992E-14, .8327466064365653E+00,
     3       .7211797160893487E+00,-.4163733032182806E+00,
     4      -.3605898580446743E+00, .2081866516091403E+00,
     5       .1183943196721645E-14,-.4163733032182826E+00,
     6       .3605898580446731E+00, .2081866516091423E+00,
     7      -.4655046616992554E+00,-.4163876581601363E+00,
     8      -.5933546206386154E+00,-.1949450335315712E+00,
     1       .1278499589393578E+00, .6113326916917050E+00,
     2      -.1278499589393612E+00, .6113326916917042E+00,
     3       .4655046616992577E+00,-.4163876581601337E+00,
     4       .5933546206386164E+00,-.1949450335315680E+00,
     5      -.5970029106472174E-15, .2119374560832943E+00,
     6       .1835432209815820E+00,-.1059687280416466E+00,
     7      -.1835432209815814E+00,-.1059687280416477E+00/
c 
        data ws4/
     1       .2541045542796731E+00, .2541045542796733E+00,
     2       .2541045542796728E+00, .4231188135485931E+00,
     3       .4231188135485924E+00, .4231188135485928E+00,
     4       .1745313851211962E-14, .6743536096025253E-14,
     5       .6482896811847951E-14,-.8064381453439696E-15,
     6       .8855211794181653E-14, .2849324356107572E-15,
     7       .8261231782333128E-01, .8261231782332507E-01,
     8       .8261231782332622E-01/
c 
        data zs5a/
     1      -.8206388947464283E+00,-.4737960867893303E+00,
     2      -.2608707385797541E-14, .9475921735786562E+00,
     3       .8206388947464308E+00,-.4737960867893258E+00,
     4      -.6206129888676207E+00,-.4738152249421773E+00,
     5      -.7206425159335723E+00,-.3005590018068638E+00,
     6       .1000295270659491E+00, .7743742267490377E+00,
     7      -.1000295270659533E+00, .7743742267490371E+00,
     8       .6206129888676233E+00,-.4738152249421738E+00,
     9       .7206425159335740E+00,-.3005590018068600E+00,
     a      -.2273137644542947E+00,-.4738030962919144E+00/
c 
        data zs5b/
     1      -.5239824000076698E+00, .4004205349866289E-01,
     2       .2966686355533725E+00, .4337610427932501E+00,
     3      -.2966686355533750E+00, .4337610427932486E+00,
     4       .2273137644542973E+00,-.4738030962919130E+00,
     5       .5239824000076698E+00, .4004205349866582E-01,
     6      -.4390528498846017E+00,-.2534872810693487E+00,
     7      -.1363637562284572E-14, .5069745621386951E+00,
     8       .4390528498846030E+00,-.2534872810693464E+00,
     9       .2136500066583488E+00, .1233508888565638E+00,
     a       .6761806589721171E-15,-.2467017777131265E+00,
     1      -.2136500066583495E+00, .1233508888565626E+00/
c 
        data ws5/
     1       .5233218918288478E-01, .5233218918288454E-01,
     2       .5233218918288463E-01, .9631279155635487E-01,
     3       .9631279155636197E-01, .9631279155636202E-01,
     4       .9631279155635439E-01, .9631279155636309E-01,
     5       .9631279155635421E-01, .1335702369276889E+00,
     6       .1335702369276851E+00, .1335702369276849E+00,
     7       .1335702369276876E+00, .1335702369276853E+00,
     8       .1335702369276882E+00, .1305158724935251E-15,
     9       .4485340489963679E-15, .3861432704541950E-15,
     1       .2477374395006268E+00, .2477374395006239E+00,
     2       .2477374395006279E+00/
c 
        data zs6a/
     1      -.8552410207095976E+00,-.4937736335286997E+00,
     2      -.2757992147342982E-14, .9875472670573946E+00,
     3       .8552410207096004E+00,-.4937736335286950E+00,
     4      -.6962275741076447E+00,-.4937951034821959E+00,
     5      -.7757528909337675E+00,-.3560532142513395E+00,
     6       .7952531682612023E-01, .8498483177335313E+00,
     7      -.7952531682612494E-01, .8498483177335311E+00,
     8       .6962275741076474E+00,-.4937951034821919E+00,
     9       .7757528909337695E+00,-.3560532142513352E+00,
     a      -.3856235154627886E+00,-.4937855250041214E+00,
     1      -.6204425664059993E+00,-.8706699818537882E-01,
     2       .2348190509432079E+00, .5808525231894982E+00,
     3      -.2348190509432110E+00, .5808525231894969E+00,
     4       .3856235154627913E+00,-.4937855250041194E+00,
     5       .6204425664059995E+00,-.8706699818537546E-01,
     6       .1378996073671491E-14,-.4937736335286973E+00,
     7      -.4276205103548002E+00, .2468868167643475E+00,
     8       .4276205103547988E+00, .2468868167643498E+00,
     9      -.5636766263504447E+00,-.3254388519593314E+00,
     a      -.1808209224906677E-14, .6508777039186597E+00/
c 
       data zs6b/
     1       .5636766263504465E+00,-.3254388519593283E+00,
     2       .1903477490992833E+00, .3264349637074361E+00,
     3       .3778748458037326E+00, .1628504419449876E-02,
     4      -.1875270967044475E+00,-.3280634681268850E+00,
     5       .1875270967044493E+00,-.3280634681268839E+00,
     6      -.1903477490992851E+00, .3264349637074351E+00,
     7      -.3778748458037326E+00, .1628504419447785E-02,
     8       .0000000000000000E+00, .0000000000000000E+00/
c 
        data ws6/
     1       .7401225658262581E-01, .7401225658262678E-01,
     2       .7401225658262606E-01, .1788864705754207E-14,
     3       .5694337851894061E-14, .4228861756785413E-14,
     4      -.1940623808276065E-15, .5789129058448912E-14,
     5       .6540647430251633E-15, .1386507812002345E+00,
     6       .1386507812002360E+00, .1386507812002367E+00,
     7       .1386507812002342E+00, .1386507812002369E+00,
     9       .1386507812002339E+00, .4999021470998073E-01,
     a       .4999021470997943E-01, .4999021470997983E-01,
     1       .8752442214662676E-01, .8752442214662942E-01,
     2       .8752442214662849E-01, .8047303197824549E-01,
     3       .8047303197825341E-01, .8047303197825190E-01,
     4       .8047303197824393E-01, .8047303197825234E-01,
     5       .8047303197824791E-01, .3301834975661746E+00/
c 
        data zs7a/
     1      -.8856024846638709E+00,-.5113028329156906E+00,
     2      -.2802739224639518E-14, .1022605665831376E+01,
     3       .8856024846638737E+00,-.5113028329156857E+00,
     4      -.6026389869298623E+00,-.5113214167465383E+00,
     5      -.7441368298664816E+00,-.2662399636189138E+00,
     6       .1414978429366167E+00, .7775613803654486E+00,
     7      -.1414978429366209E+00, .7775613803654481E+00,
     8       .6026389869298648E+00,-.5113214167465349E+00,
     9       .7441368298664831E+00,-.2662399636189098E+00,
     a      -.2186580379659904E+00,-.5113095754553568E+00,
     1      -.5521361005255708E+00, .6629137210746544E-01,
     2       .3334780625595776E+00, .4450182033478902E+00,
     3      -.3334780625595801E+00, .4450182033478883E+00,
     4       .2186580379659932E+00,-.5113095754553556E+00,
     5       .5521361005255705E+00, .6629137210746849E-01,
     6      -.7434881567535454E+00,-.4292530874409609E+00,
     7      -.2395159273477840E-14, .8585061748819177E+00,
     8       .7434881567535478E+00,-.4292530874409568E+00,
     9      -.4350260344636732E+00,-.2511623981020987E+00,
     a      -.1410614318307771E-14, .5023247962041950E+00/
c 
        data zs7b/
     1       .4350260344636745E+00,-.2511623981020963E+00,
     2      -.7858015870496708E+00,-.5113270651561467E+00,
     3      -.8357230215925969E+00,-.4248606041410751E+00,
     4       .4992143454292332E-01, .9361876692972173E+00,
     5      -.4992143454292845E-01, .9361876692972172E+00,
     6       .7858015870496735E+00,-.5113270651561423E+00,
     7       .8357230215925994E+00,-.4248606041410706E+00,
     8       .2073101482391303E+00, .1196905698916038E+00,
     9       .6363100957213956E-15,-.2393811397832065E+00,
     a      -.2073101482391309E+00, .1196905698916027E+00,
     1      -.2038682048809356E+00, .4686199574162226E+00,
     2       .3039026854023653E+00,-.4108650231589308E+00,
     3      -.5077708902832984E+00,-.5775493425729320E-01,
     4       .5077708902832985E+00,-.5775493425729038E-01,
     5       .2038682048809331E+00, .4686199574162239E+00,
     6      -.3039026854023629E+00,-.4108650231589323E+00/
c 
        data ws7/
     1       .3600830407924665E-01, .3600830407924580E-01,
     2       .3600830407924688E-01, .7011542628766355E-01,
     3       .7011542628766242E-01, .7011542628766046E-01,
     4       .7011542628766132E-01, .7011542628766293E-01,
     5       .7011542628766272E-01, .9141789093587216E-01,
     6       .9141789093587546E-01, .9141789093587722E-01,
     7       .9141789093587196E-01, .9141789093587700E-01,
     8       .9141789093587013E-01,-.5849447620582716E-15,
     9      -.4631507565479148E-15, .5234948393102952E-15,
     a       .1602560095239797E+00, .1602560095239805E+00,
     1       .1602560095239790E+00, .6909811895465446E-02,
     2       .6909811895471405E-02, .6909811895472730E-02,
     3       .6909811895466544E-02, .6909811895471143E-02,
     4       .6909811895464752E-02, .1976617629672764E+00,
     5       .1976617629672775E+00, .1976617629672784E+00,
     6       .1451167542154573E-01, .1451167542154066E-01,
     7       .1451167542154243E-01, .1451167542154780E-01,
     8       .1451167542154211E-01, .1451167542154454E-01/
c 
        data zs8a/
     1      -.9004560121490122E+00,-.5198785210076523E+00,
     2      -.2773099925471215E-14, .1039757042015300E+01,
     3       .9004560121490149E+00,-.5198785210076475E+00,
     4      -.7924084147495121E+00,-.5199029569827965E+00,
     5      -.8464533756245037E+00,-.4262943388542396E+00,
     6       .5404496087498875E-01, .9461972958370317E+00,
     7      -.5404496087499402E-01, .9461972958370314E+00,
     8       .7924084147495150E+00,-.5199029569827922E+00,
     9       .8464533756245061E+00,-.4262943388542348E+00,
     a      -.5918757954797268E+00,-.5198967729126167E+00,
     1      -.7461817104277374E+00,-.2526310883142619E+00,
     2       .1543059149480079E+00, .7725278612268753E+00,
     3      -.1543059149480121E+00, .7725278612268746E+00,
     4       .5918757954797296E+00,-.5198967729126135E+00,
     5       .7461817104277390E+00,-.2526310883142579E+00,
     6      -.3028639795054049E+00,-.5198878603009961E+00,
     7      -.6016680838925005E+00,-.2343969992435386E-02,
     8       .2988041043870928E+00, .5222318302934299E+00,
     9      -.2988041043870956E+00, .5222318302934282E+00,
     a       .3028639795054077E+00,-.5198878603009944E+00/
c 
        data zs8b/
     1       .6016680838925005E+00,-.2343969992432103E-02,
     2       .1386549962735608E-14,-.5198785210076499E+00,
     3      -.4502280060745075E+00, .2599392605038238E+00,
     4       .4502280060745061E+00, .2599392605038262E+00,
     5      -.7073197945646723E+00,-.4083712737950670E+00,
     6      -.2240924013520411E-14, .8167425475901300E+00,
     7       .7073197945646746E+00,-.4083712737950631E+00,
     8      -.4467412276254310E+00,-.4055975196412702E+00,
     9      -.5746283695340123E+00,-.1840904922208378E+00,
     a       .1278871419085791E+00, .5896880118621056E+00,
     1      -.1278871419085823E+00, .5896880118621048E+00,
     2       .4467412276254333E+00,-.4055975196412678E+00,
     3       .5746283695340133E+00,-.1840904922208346E+00,
     4      -.4019023821607890E+00, .1275818368440033E+00,
     5      -.9046207931200380E-01,-.4118485912147273E+00,
     6      -.3114403028487845E+00, .2842667543707216E+00,
     7       .3114403028487829E+00, .2842667543707234E+00,
     8       .4019023821607883E+00, .1275818368440056E+00,
     9       .9046207931200612E-01,-.4118485912147267E+00,
     a      -.2986884468263319E+00,-.1724478551790150E+00/
c 
        data zs8c/
     1      -.9433378280087670E-15, .3448957103580284E+00,
     2       .2986884468263328E+00,-.1724478551790134E+00,
     3      -.2076911175970664E+00, .1199105226529597E+00,
     4       .6651258641195098E-15,-.2398210453059206E+00,
     5       .2076911175970657E+00, .1199105226529609E+00/
c 
        data ws8a/
     1       .3447304125683343E-01, .3447304125683440E-01,
     2       .3447304125683371E-01, .1473016483898028E-14,
     3       .3713570082032438E-14, .2157197286256451E-14,
     4      -.1714021321827388E-15, .3347403833213195E-14,
     5       .7967582670009259E-15, .6494752564180739E-01,
     6       .6494752564181078E-01, .6494752564181121E-01,
     7       .6494752564180702E-01, .6494752564181168E-01,
     8       .6494752564180632E-01, .3046798322148834E-01,
     9       .3046798322148781E-01, .3046798322148803E-01,
     a       .3046798322148708E-01, .3046798322148877E-01,
     1       .3046798322148718E-01, .7688049756435086E-01,
     2       .7688049756435079E-01, .7688049756435045E-01,
     3       .2886748223734072E-01, .2886748223734445E-01,
     4       .2886748223734212E-01, .5277641169496518E-01,
     5       .5277641169495832E-01, .5277641169495439E-01,
     6       .5277641169496398E-01, .5277641169495514E-01,
     7       .5277641169496792E-01, .2682502984717349E-01,
     8       .2682502984716273E-01, .2682502984716685E-01,
     9       .2682502984717964E-01, .2682502984716181E-01,
     a       .2682502984717598E-01, .1599440513801859E+00/
c 
        data ws8b/
     1       .1599440513801874E+00, .1599440513801860E+00,
     2       .1096367124020291E+00, .1096367124020289E+00,
     3       .1096367124020270E+00/
c 
        data zs9a/
     1      -.9022510486443192E+00,-.5209148858114231E+00,
     2      -.2877110575018343E-14, .1041829771622841E+01,
     3       .9022510486443220E+00,-.5209148858114181E+00,
     4      -.8498670418297997E+00,-.4299893315837100E+00,
     5      -.7973152054226804E+00,-.5210117822718878E+00,
     6      -.5255183640712145E-01, .9510011138555933E+00,
     7       .5255183640711642E-01, .9510011138555935E+00,
     8       .8498670418298019E+00,-.4299893315837056E+00,
     9       .7973152054226831E+00,-.5210117822718835E+00,
     a      -.7130104973143040E+00,-.1930133622561874E+00,
     1      -.5236597236408560E+00,-.5209785227110729E+00,
     2      -.1893507736734492E+00, .7139918849672564E+00,
     3       .1893507736734452E+00, .7139918849672573E+00,
     4       .7130104973143052E+00,-.1930133622561835E+00,
     5       .5236597236408588E+00,-.5209785227110698E+00,
     6      -.1391552587185274E+00,-.5209317907780910E+00,
     7      -.5207177938120114E+00, .1399539062686020E+00,
     8       .3815625350934813E+00, .3809778845094883E+00,
     9      -.3815625350934834E+00, .3809778845094863E+00,
     a       .1391552587185302E+00,-.5209317907780902E+00/
c 
        data zs9b/
     1       .5207177938120107E+00, .1399539062686048E+00,
     2      -.6694051578355251E+00,-.5209962363307690E+00,
     3      -.7858985548562880E+00,-.3192237539445165E+00,
     4       .1164933970207599E+00, .8402199902752819E+00,
     5      -.1164933970207645E+00, .8402199902752810E+00,
     6       .6694051578355282E+00,-.5209962363307653E+00,
     7       .7858985548562896E+00,-.3192237539445121E+00,
     8      -.7547714260449794E+00,-.4357674860037092E+00,
     9      -.2360152550275352E-14, .8715349720074144E+00,
     a       .7547714260449816E+00,-.4357674860037052E+00,
     1      -.5378530287715713E+00,-.4565649963450050E+00,
     2      -.6643233996993082E+00,-.2375118882460845E+00,
     3       .1264703709277343E+00, .6940768845910866E+00,
     4      -.1264703709277380E+00, .6940768845910859E+00,
     5       .5378530287715738E+00,-.4565649963450021E+00,
     6       .6643233996993093E+00,-.2375118882460808E+00,
     7      -.1771270158656520E+00,-.4551627781466048E+00,
     8      -.4827460366648867E+00, .7418489363711581E-01,
     9       .3056190207992322E+00, .3809778845094881E+00,
     a      -.3056190207992343E+00, .3809778845094863E+00/
c 
        data zs9c/
     1       .1771270158656545E+00,-.4551627781466038E+00,
     2       .4827460366648862E+00, .7418489363711844E-01,
     3      -.5286741036252560E+00,-.3052301360416276E+00,
     4      -.1703251289094567E-14, .6104602720832524E+00,
     5       .5286741036252577E+00,-.3052301360416247E+00,
     6      -.2568006681376744E+00, .1482639348773611E+00,
     7       .8348854124194022E-15,-.2965278697547236E+00,
     8       .2568006681376735E+00, .1482639348773625E+00,
     9      -.2891552378927364E+00,-.3088021140461302E+00,
     a      -.4120080944526559E+00,-.9601472462937964E-01,
     1       .1228528565599177E+00, .4048168386755082E+00,
     2      -.1228528565599200E+00, .4048168386755076E+00,
     3       .2891552378927381E+00,-.3088021140461287E+00,
     4       .4120080944526564E+00,-.9601472462937737E-01,
     5       .0000000000000000E+00, .0000000000000000E+00/
c 
        data ws9a/
     1       .2168804974802836E-01, .2168804974802847E-01,
     2       .2168804974802847E-01, .2055901468154028E-01,
     3       .2055901468153294E-01, .2055901468153265E-01,
     4       .2055901468154040E-01, .2055901468153185E-01,
     5       .2055901468154102E-01, .6932435445581890E-01,
     6       .6932435445581051E-01, .6932435445581001E-01,
     7       .6932435445582066E-01, .6932435445580788E-01,
     8       .6932435445582184E-01, .6053739444321043E-01,
     9       .6053739444320864E-01, .6053739444320812E-01,
     a       .6053739444320939E-01, .6053739444320890E-01/
c 
        data ws9b/
     1       .6053739444320941E-01, .3981468252691986E-02,
     2       .3981468252685414E-02, .3981468252683345E-02,
     3       .3981468252690138E-02, .3981468252684335E-02,
     4       .3981468252692515E-02, .3801944933093099E-15,
     5       .2920846107817824E-14, .1001157403560766E-14,
     6       .1503446430855862E-02, .1503446430851223E-02,
     7       .1503446430849913E-02, .1503446430857547E-02,
     8       .1503446430848119E-02, .1503446430858891E-02,
     9       .4090846081057973E-04, .4090846080931427E-04,
     a       .4090846080983198E-04, .4090846081100869E-04,
     1       .4090846080857973E-04, .4090846081225597E-04,
     2       .9831275846955660E-01, .9831275846955431E-01,
     3       .9831275846955682E-01, .1365132734227827E+00,
     4       .1365132734227804E+00, .1365132734227809E+00,
     5       .7179453773677015E-01, .7179453773677173E-01,
     6       .7179453773677344E-01, .7179453773677041E-01,
     7       .7179453773677301E-01, .7179453773676830E-01,
     8       .1435180652636005E+00/
c 
        ier=4
c 
        if(nord .ne. 1) goto 1100
        ier=0
        call arrmove(zs1,zs,6)
        call arrmove(ws1,ws,3)
        n=3
        nzeroes=0
        return
 1100 continue
c 
        if(nord .ne. 2) goto 1200
        ier=0
        call arrmove(zs2,zs,12)
        call arrmove(ws2,ws,6)
        call bubblsor(zs,ws,6,3)
        n=6
        nzeroes=3
        return
 1200 continue
c 
        if(nord .ne. 3) goto 1300
        ier=0
        call arrmove(zs3,zs,20)
        call arrmove(ws3,ws,10)
        n=10
        nzeroes=1
        return
 1300 continue
c 
        if(nord .ne. 4) goto 1400
        ier=0
        call arrmove(zs4,zs,30)
        call arrmove(ws4,ws,15)
        call bubblsor(zs,ws,15,6)
        n=15
        nzeroes=6
        return
 1400 continue
c 
        if(nord .ne. 5) goto 1500
        ier=0
c 
        call arrmove(zs5,zs,42)
        call arrmove(ws5,ws,21)
        call bubblsor(zs,ws,21,3)
        n=21
        nzeroes=3
        return
 1500 continue
c 
        if(nord .ne. 6) goto 1600
        ier=0
        call arrmove(zs6,zs,56)
        call arrmove(ws6,ws,28)
        call bubblsor(zs,ws,28,6)
        n=28
        nzeroes=6
        return
 1600 continue
c 
        if(nord .ne. 7) goto 1700
        ier=0
        call arrmove(zs7,zs,72)
        call arrmove(ws7,ws,36)
        call bubblsor(zs,ws,36,3)
        n=36
        nzeroes=3
        return
 1700 continue
c 
        if(nord .ne. 8) goto 1800
        ier=0
        call arrmove(zs8,zs,90)
        call arrmove(ws8,ws,45)
        call bubblsor(zs,ws,45,6)
        n=45
        nzeroes=6
        return
 1800 continue
c 
        if(nord .ne. 9) goto 1900
        ier=0
        call arrmove(zs9,zs,110)
        call arrmove(ws9,ws,55)
        call bubblsor(zs,ws,55,3)
        n=55
        nzeroes=3
        return
 1900 continue
  
  
        return
        end
c 
c 
c 
c 
c 
        subroutine bubblsor(z,w,n,npass)
        implicit real *8 (a-h,o-z)
        save
        dimension z(2,1),w(1)
c 
c       perform nass passes of the bubble sort on the
c       arrays a,w
c 
        do 2000 i=1,npass
        do 1200 j=1,n-1
c 
        if(w(j) .gt. w(j+1)) goto 1200
c 
        d=w(j)
        w(j)=w(j+1)
        w(j+1)=d
c 
        d=z(1,j)
        z(1,j)=z(1,j+1)
        z(1,j+1)=d
c 
        d=z(2,j)
        z(2,j)=z(2,j+1)
        z(2,j+1)=d
c 
 1200 continue
 2000 continue
        return
        end
c 
c 
c 
c 
c 
        subroutine arrmove(a,b,n)
        implicit real *8 (a-h,o-z)
        save
        dimension a(1),b(1)
c 
        do 1200 i=1,n
        b(i)=a(i)
 1200 continue
        return
        end
